//
// SubscriptionAttributes.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct SubscriptionAttributes: Codable {

    public enum State: String, Codable { 
        case missingMetadata = "MISSING_METADATA"
        case readyToSubmit = "READY_TO_SUBMIT"
        case waitingForReview = "WAITING_FOR_REVIEW"
        case inReview = "IN_REVIEW"
        case developerActionNeeded = "DEVELOPER_ACTION_NEEDED"
        case pendingBinaryApproval = "PENDING_BINARY_APPROVAL"
        case approved = "APPROVED"
        case developerRemovedFromSale = "DEVELOPER_REMOVED_FROM_SALE"
        case removedFromSale = "REMOVED_FROM_SALE"
        case rejected = "REJECTED"
    }
    public enum SubscriptionPeriod: String, Codable { 
        case oneWeek = "ONE_WEEK"
        case oneMonth = "ONE_MONTH"
        case twoMonths = "TWO_MONTHS"
        case threeMonths = "THREE_MONTHS"
        case sixMonths = "SIX_MONTHS"
        case oneYear = "ONE_YEAR"
    }
    public var name: String?
    public var productId: String?
    public var familySharable: Bool?
    public var state: State?
    public var subscriptionPeriod: SubscriptionPeriod?
    public var reviewNote: String?
    public var groupLevel: Int?
    public var availableInAllTerritories: Bool?

    public init(name: String? = nil, productId: String? = nil, familySharable: Bool? = nil, state: State? = nil, subscriptionPeriod: SubscriptionPeriod? = nil, reviewNote: String? = nil, groupLevel: Int? = nil, availableInAllTerritories: Bool? = nil) {
        self.name = name
        self.productId = productId
        self.familySharable = familySharable
        self.state = state
        self.subscriptionPeriod = subscriptionPeriod
        self.reviewNote = reviewNote
        self.groupLevel = groupLevel
        self.availableInAllTerritories = availableInAllTerritories
    }


}
