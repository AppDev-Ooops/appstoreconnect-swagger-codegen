//
// AppPreviewSetsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppPreviewSetsAPI {
    /**
     * enum for parameter fieldsAppPreviews
     */
    public enum FieldsAppPreviews_appPreviewSetsAppPreviewsGetToManyRelated: String { 
        case apppreviewset = "appPreviewSet"
        case assetdeliverystate = "assetDeliveryState"
        case filename = "fileName"
        case filesize = "fileSize"
        case mimetype = "mimeType"
        case previewframetimecode = "previewFrameTimeCode"
        case previewimage = "previewImage"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
        case videourl = "videoUrl"
    }

    /**
     * enum for parameter fieldsAppPreviewSets
     */
    public enum FieldsAppPreviewSets_appPreviewSetsAppPreviewsGetToManyRelated: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case apppreviews = "appPreviews"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
        case previewtype = "previewType"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appPreviewSetsAppPreviewsGetToManyRelated: String { 
        case apppreviewset = "appPreviewSet"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppPreviews: (query) the fields to include for returned resources of type appPreviews (optional)
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPreviewSetsAppPreviewsGetToManyRelated(_id: String, fieldsAppPreviews: [String]? = nil, fieldsAppPreviewSets: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: AppPreviewsResponse?,_ error: Error?) -> Void)) {
        appPreviewSetsAppPreviewsGetToManyRelatedWithRequestBuilder(_id: _id, fieldsAppPreviews: fieldsAppPreviews, fieldsAppPreviewSets: fieldsAppPreviewSets, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appPreviewSets/{id}/appPreviews
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "appPreviewSet" : {
        "data" : {
          "id" : "id",
          "type" : "appPreviewSets"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "fileName" : "fileName",
      "videoUrl" : "videoUrl",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "mimeType" : "mimeType",
      "sourceFileChecksum" : "sourceFileChecksum",
      "previewFrameTimeCode" : "previewFrameTimeCode",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ],
      "previewImage" : {
        "width" : 6,
        "templateUrl" : "templateUrl",
        "height" : 1
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviews"
  }, {
    "relationships" : {
      "appPreviewSet" : {
        "data" : {
          "id" : "id",
          "type" : "appPreviewSets"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "fileName" : "fileName",
      "videoUrl" : "videoUrl",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "mimeType" : "mimeType",
      "sourceFileChecksum" : "sourceFileChecksum",
      "previewFrameTimeCode" : "previewFrameTimeCode",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ],
      "previewImage" : {
        "width" : 6,
        "templateUrl" : "templateUrl",
        "height" : 1
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviews"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appPreviews" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviews"
        }, {
          "id" : "id",
          "type" : "appPreviews"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "previewType" : "IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviewSets"
  }, {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appPreviews" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviews"
        }, {
          "id" : "id",
          "type" : "appPreviews"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "previewType" : "IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviewSets"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppPreviews: (query) the fields to include for returned resources of type appPreviews (optional)
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<AppPreviewsResponse> 
     */
    open class func appPreviewSetsAppPreviewsGetToManyRelatedWithRequestBuilder(_id: String, fieldsAppPreviews: [String]? = nil, fieldsAppPreviewSets: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<AppPreviewsResponse> {
        var path = "/v1/appPreviewSets/{id}/appPreviews"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appPreviews]": fieldsAppPreviews, 
                        "fields[appPreviewSets]": fieldsAppPreviewSets, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<AppPreviewsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter limit: (query) maximum resources per page (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPreviewSetsAppPreviewsGetToManyRelationship(_id: String, limit: Int? = nil, completion: @escaping ((_ data: AppPreviewSetAppPreviewsLinkagesResponse?,_ error: Error?) -> Void)) {
        appPreviewSetsAppPreviewsGetToManyRelationshipWithRequestBuilder(_id: _id, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appPreviewSets/{id}/relationships/appPreviews
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "id" : "id",
    "type" : "appPreviews"
  }, {
    "id" : "id",
    "type" : "appPreviews"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  }
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter limit: (query) maximum resources per page (optional)

     - returns: RequestBuilder<AppPreviewSetAppPreviewsLinkagesResponse> 
     */
    open class func appPreviewSetsAppPreviewsGetToManyRelationshipWithRequestBuilder(_id: String, limit: Int? = nil) -> RequestBuilder<AppPreviewSetAppPreviewsLinkagesResponse> {
        var path = "/v1/appPreviewSets/{id}/relationships/appPreviews"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "limit": limit?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppPreviewSetAppPreviewsLinkagesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) List of related linkages 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPreviewSetsAppPreviewsReplaceToManyRelationship(body: AppPreviewSetAppPreviewsLinkagesRequest, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        appPreviewSetsAppPreviewsReplaceToManyRelationshipWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PATCH /v1/appPreviewSets/{id}/relationships/appPreviews
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter body: (body) List of related linkages 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func appPreviewSetsAppPreviewsReplaceToManyRelationshipWithRequestBuilder(body: AppPreviewSetAppPreviewsLinkagesRequest, _id: String) -> RequestBuilder<Void> {
        var path = "/v1/appPreviewSets/{id}/relationships/appPreviews"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body) AppPreviewSet representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPreviewSetsCreateInstance(body: AppPreviewSetCreateRequest, completion: @escaping ((_ data: AppPreviewSetResponse?,_ error: Error?) -> Void)) {
        appPreviewSetsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/appPreviewSets
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appPreviews" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviews"
        }, {
          "id" : "id",
          "type" : "appPreviews"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "previewType" : "IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviewSets"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) AppPreviewSet representation 

     - returns: RequestBuilder<AppPreviewSetResponse> 
     */
    open class func appPreviewSetsCreateInstanceWithRequestBuilder(body: AppPreviewSetCreateRequest) -> RequestBuilder<AppPreviewSetResponse> {
        let path = "/v1/appPreviewSets"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppPreviewSetResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPreviewSetsDeleteInstance(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        appPreviewSetsDeleteInstanceWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v1/appPreviewSets/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func appPreviewSetsDeleteInstanceWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/v1/appPreviewSets/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppPreviewSets
     */
    public enum FieldsAppPreviewSets_appPreviewSetsGetInstance: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case apppreviews = "appPreviews"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
        case previewtype = "previewType"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appPreviewSetsGetInstance: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case apppreviews = "appPreviews"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
    }

    /**
     * enum for parameter fieldsAppPreviews
     */
    public enum FieldsAppPreviews_appPreviewSetsGetInstance: String { 
        case apppreviewset = "appPreviewSet"
        case assetdeliverystate = "assetDeliveryState"
        case filename = "fileName"
        case filesize = "fileSize"
        case mimetype = "mimeType"
        case previewframetimecode = "previewFrameTimeCode"
        case previewimage = "previewImage"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
        case videourl = "videoUrl"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAppPreviews: (query) the fields to include for returned resources of type appPreviews (optional)
     - parameter limitAppPreviews: (query) maximum number of related appPreviews returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPreviewSetsGetInstance(_id: String, fieldsAppPreviewSets: [String]? = nil, include: [String]? = nil, fieldsAppPreviews: [String]? = nil, limitAppPreviews: Int? = nil, completion: @escaping ((_ data: AppPreviewSetResponse?,_ error: Error?) -> Void)) {
        appPreviewSetsGetInstanceWithRequestBuilder(_id: _id, fieldsAppPreviewSets: fieldsAppPreviewSets, include: include, fieldsAppPreviews: fieldsAppPreviews, limitAppPreviews: limitAppPreviews).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appPreviewSets/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appPreviews" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviews"
        }, {
          "id" : "id",
          "type" : "appPreviews"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "previewType" : "IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviewSets"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAppPreviews: (query) the fields to include for returned resources of type appPreviews (optional)
     - parameter limitAppPreviews: (query) maximum number of related appPreviews returned (when they are included) (optional)

     - returns: RequestBuilder<AppPreviewSetResponse> 
     */
    open class func appPreviewSetsGetInstanceWithRequestBuilder(_id: String, fieldsAppPreviewSets: [String]? = nil, include: [String]? = nil, fieldsAppPreviews: [String]? = nil, limitAppPreviews: Int? = nil) -> RequestBuilder<AppPreviewSetResponse> {
        var path = "/v1/appPreviewSets/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appPreviewSets]": fieldsAppPreviewSets, 
                        "include": include, 
                        "fields[appPreviews]": fieldsAppPreviews, 
                        "limit[appPreviews]": limitAppPreviews?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppPreviewSetResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
