//
// AppStoreReviewDetailsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppStoreReviewDetailsAPI {
    /**
     * enum for parameter fieldsAppStoreReviewDetails
     */
    public enum FieldsAppStoreReviewDetails_appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated: String { 
        case appstorereviewattachments = "appStoreReviewAttachments"
        case appstoreversion = "appStoreVersion"
        case contactemail = "contactEmail"
        case contactfirstname = "contactFirstName"
        case contactlastname = "contactLastName"
        case contactphone = "contactPhone"
        case demoaccountname = "demoAccountName"
        case demoaccountpassword = "demoAccountPassword"
        case demoaccountrequired = "demoAccountRequired"
        case notes = "notes"
    }

    /**
     * enum for parameter fieldsAppStoreReviewAttachments
     */
    public enum FieldsAppStoreReviewAttachments_appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated: String { 
        case appstorereviewdetail = "appStoreReviewDetail"
        case assetdeliverystate = "assetDeliveryState"
        case filename = "fileName"
        case filesize = "fileSize"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated: String { 
        case appstorereviewdetail = "appStoreReviewDetail"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppStoreReviewDetails: (query) the fields to include for returned resources of type appStoreReviewDetails (optional)
     - parameter fieldsAppStoreReviewAttachments: (query) the fields to include for returned resources of type appStoreReviewAttachments (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated(_id: String, fieldsAppStoreReviewDetails: [String]? = nil, fieldsAppStoreReviewAttachments: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: AppStoreReviewAttachmentsResponse?,_ error: Error?) -> Void)) {
        appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedWithRequestBuilder(_id: _id, fieldsAppStoreReviewDetails: fieldsAppStoreReviewDetails, fieldsAppStoreReviewAttachments: fieldsAppStoreReviewAttachments, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appStoreReviewDetails/{id}/appStoreReviewAttachments
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "appStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreReviewDetails"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "sourceFileChecksum" : "sourceFileChecksum",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appStoreReviewAttachments"
  }, {
    "relationships" : {
      "appStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreReviewDetails"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "sourceFileChecksum" : "sourceFileChecksum",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appStoreReviewAttachments"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "appStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      },
      "appStoreReviewAttachments" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        }, {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "demoAccountPassword" : "demoAccountPassword",
      "notes" : "notes",
      "contactEmail" : "contactEmail",
      "contactFirstName" : "contactFirstName",
      "demoAccountRequired" : true,
      "demoAccountName" : "demoAccountName",
      "contactLastName" : "contactLastName",
      "contactPhone" : "contactPhone"
    },
    "id" : "id",
    "type" : "appStoreReviewDetails"
  }, {
    "relationships" : {
      "appStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      },
      "appStoreReviewAttachments" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        }, {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "demoAccountPassword" : "demoAccountPassword",
      "notes" : "notes",
      "contactEmail" : "contactEmail",
      "contactFirstName" : "contactFirstName",
      "demoAccountRequired" : true,
      "demoAccountName" : "demoAccountName",
      "contactLastName" : "contactLastName",
      "contactPhone" : "contactPhone"
    },
    "id" : "id",
    "type" : "appStoreReviewDetails"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppStoreReviewDetails: (query) the fields to include for returned resources of type appStoreReviewDetails (optional)
     - parameter fieldsAppStoreReviewAttachments: (query) the fields to include for returned resources of type appStoreReviewAttachments (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<AppStoreReviewAttachmentsResponse> 
     */
    open class func appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedWithRequestBuilder(_id: String, fieldsAppStoreReviewDetails: [String]? = nil, fieldsAppStoreReviewAttachments: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<AppStoreReviewAttachmentsResponse> {
        var path = "/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appStoreReviewDetails]": fieldsAppStoreReviewDetails, 
                        "fields[appStoreReviewAttachments]": fieldsAppStoreReviewAttachments, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<AppStoreReviewAttachmentsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) AppStoreReviewDetail representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreReviewDetailsCreateInstance(body: AppStoreReviewDetailCreateRequest, completion: @escaping ((_ data: AppStoreReviewDetailResponse?,_ error: Error?) -> Void)) {
        appStoreReviewDetailsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/appStoreReviewDetails
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      },
      "appStoreReviewAttachments" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        }, {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "demoAccountPassword" : "demoAccountPassword",
      "notes" : "notes",
      "contactEmail" : "contactEmail",
      "contactFirstName" : "contactFirstName",
      "demoAccountRequired" : true,
      "demoAccountName" : "demoAccountName",
      "contactLastName" : "contactLastName",
      "contactPhone" : "contactPhone"
    },
    "id" : "id",
    "type" : "appStoreReviewDetails"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) AppStoreReviewDetail representation 

     - returns: RequestBuilder<AppStoreReviewDetailResponse> 
     */
    open class func appStoreReviewDetailsCreateInstanceWithRequestBuilder(body: AppStoreReviewDetailCreateRequest) -> RequestBuilder<AppStoreReviewDetailResponse> {
        let path = "/v1/appStoreReviewDetails"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppStoreReviewDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter fieldsAppStoreReviewDetails
     */
    public enum FieldsAppStoreReviewDetails_appStoreReviewDetailsGetInstance: String { 
        case appstorereviewattachments = "appStoreReviewAttachments"
        case appstoreversion = "appStoreVersion"
        case contactemail = "contactEmail"
        case contactfirstname = "contactFirstName"
        case contactlastname = "contactLastName"
        case contactphone = "contactPhone"
        case demoaccountname = "demoAccountName"
        case demoaccountpassword = "demoAccountPassword"
        case demoaccountrequired = "demoAccountRequired"
        case notes = "notes"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appStoreReviewDetailsGetInstance: String { 
        case appstorereviewattachments = "appStoreReviewAttachments"
        case appstoreversion = "appStoreVersion"
    }

    /**
     * enum for parameter fieldsAppStoreReviewAttachments
     */
    public enum FieldsAppStoreReviewAttachments_appStoreReviewDetailsGetInstance: String { 
        case appstorereviewdetail = "appStoreReviewDetail"
        case assetdeliverystate = "assetDeliveryState"
        case filename = "fileName"
        case filesize = "fileSize"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppStoreReviewDetails: (query) the fields to include for returned resources of type appStoreReviewDetails (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAppStoreReviewAttachments: (query) the fields to include for returned resources of type appStoreReviewAttachments (optional)
     - parameter limitAppStoreReviewAttachments: (query) maximum number of related appStoreReviewAttachments returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreReviewDetailsGetInstance(_id: String, fieldsAppStoreReviewDetails: [String]? = nil, include: [String]? = nil, fieldsAppStoreReviewAttachments: [String]? = nil, limitAppStoreReviewAttachments: Int? = nil, completion: @escaping ((_ data: AppStoreReviewDetailResponse?,_ error: Error?) -> Void)) {
        appStoreReviewDetailsGetInstanceWithRequestBuilder(_id: _id, fieldsAppStoreReviewDetails: fieldsAppStoreReviewDetails, include: include, fieldsAppStoreReviewAttachments: fieldsAppStoreReviewAttachments, limitAppStoreReviewAttachments: limitAppStoreReviewAttachments).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appStoreReviewDetails/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      },
      "appStoreReviewAttachments" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        }, {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "demoAccountPassword" : "demoAccountPassword",
      "notes" : "notes",
      "contactEmail" : "contactEmail",
      "contactFirstName" : "contactFirstName",
      "demoAccountRequired" : true,
      "demoAccountName" : "demoAccountName",
      "contactLastName" : "contactLastName",
      "contactPhone" : "contactPhone"
    },
    "id" : "id",
    "type" : "appStoreReviewDetails"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppStoreReviewDetails: (query) the fields to include for returned resources of type appStoreReviewDetails (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAppStoreReviewAttachments: (query) the fields to include for returned resources of type appStoreReviewAttachments (optional)
     - parameter limitAppStoreReviewAttachments: (query) maximum number of related appStoreReviewAttachments returned (when they are included) (optional)

     - returns: RequestBuilder<AppStoreReviewDetailResponse> 
     */
    open class func appStoreReviewDetailsGetInstanceWithRequestBuilder(_id: String, fieldsAppStoreReviewDetails: [String]? = nil, include: [String]? = nil, fieldsAppStoreReviewAttachments: [String]? = nil, limitAppStoreReviewAttachments: Int? = nil) -> RequestBuilder<AppStoreReviewDetailResponse> {
        var path = "/v1/appStoreReviewDetails/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appStoreReviewDetails]": fieldsAppStoreReviewDetails, 
                        "include": include, 
                        "fields[appStoreReviewAttachments]": fieldsAppStoreReviewAttachments, 
                        "limit[appStoreReviewAttachments]": limitAppStoreReviewAttachments?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppStoreReviewDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) AppStoreReviewDetail representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreReviewDetailsUpdateInstance(body: AppStoreReviewDetailUpdateRequest, _id: String, completion: @escaping ((_ data: AppStoreReviewDetailResponse?,_ error: Error?) -> Void)) {
        appStoreReviewDetailsUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/appStoreReviewDetails/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      },
      "appStoreReviewAttachments" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        }, {
          "id" : "id",
          "type" : "appStoreReviewAttachments"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "demoAccountPassword" : "demoAccountPassword",
      "notes" : "notes",
      "contactEmail" : "contactEmail",
      "contactFirstName" : "contactFirstName",
      "demoAccountRequired" : true,
      "demoAccountName" : "demoAccountName",
      "contactLastName" : "contactLastName",
      "contactPhone" : "contactPhone"
    },
    "id" : "id",
    "type" : "appStoreReviewDetails"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) AppStoreReviewDetail representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<AppStoreReviewDetailResponse> 
     */
    open class func appStoreReviewDetailsUpdateInstanceWithRequestBuilder(body: AppStoreReviewDetailUpdateRequest, _id: String) -> RequestBuilder<AppStoreReviewDetailResponse> {
        var path = "/v1/appStoreReviewDetails/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppStoreReviewDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
