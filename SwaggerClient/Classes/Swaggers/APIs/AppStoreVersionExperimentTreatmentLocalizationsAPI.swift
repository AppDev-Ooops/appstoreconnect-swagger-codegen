//
// AppStoreVersionExperimentTreatmentLocalizationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppStoreVersionExperimentTreatmentLocalizationsAPI {
    /**
     * enum for parameter filterPreviewType
     */
    public enum FilterPreviewType_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case iphone65 = "IPHONE_65"
        case iphone58 = "IPHONE_58"
        case iphone55 = "IPHONE_55"
        case iphone47 = "IPHONE_47"
        case iphone40 = "IPHONE_40"
        case iphone35 = "IPHONE_35"
        case ipadPro3gen129 = "IPAD_PRO_3GEN_129"
        case ipadPro3gen11 = "IPAD_PRO_3GEN_11"
        case ipadPro129 = "IPAD_PRO_129"
        case ipad105 = "IPAD_105"
        case ipad97 = "IPAD_97"
        case desktop = "DESKTOP"
        case watchSeries4 = "WATCH_SERIES_4"
        case watchSeries3 = "WATCH_SERIES_3"
        case appleTv = "APPLE_TV"
    }

    /**
     * enum for parameter fieldsAppCustomProductPageLocalizations
     */
    public enum FieldsAppCustomProductPageLocalizations_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case appcustomproductpageversion = "appCustomProductPageVersion"
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case locale = "locale"
        case promotionaltext = "promotionalText"
    }

    /**
     * enum for parameter fieldsAppStoreVersionExperimentTreatmentLocalizations
     */
    public enum FieldsAppStoreVersionExperimentTreatmentLocalizations_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case appstoreversionexperimenttreatment = "appStoreVersionExperimentTreatment"
        case locale = "locale"
    }

    /**
     * enum for parameter fieldsAppPreviews
     */
    public enum FieldsAppPreviews_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case apppreviewset = "appPreviewSet"
        case assetdeliverystate = "assetDeliveryState"
        case filename = "fileName"
        case filesize = "fileSize"
        case mimetype = "mimeType"
        case previewframetimecode = "previewFrameTimeCode"
        case previewimage = "previewImage"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
        case videourl = "videoUrl"
    }

    /**
     * enum for parameter fieldsAppPreviewSets
     */
    public enum FieldsAppPreviewSets_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case apppreviews = "appPreviews"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
        case previewtype = "previewType"
    }

    /**
     * enum for parameter fieldsAppStoreVersionLocalizations
     */
    public enum FieldsAppStoreVersionLocalizations_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case appstoreversion = "appStoreVersion"
        case _description = "description"
        case keywords = "keywords"
        case locale = "locale"
        case marketingurl = "marketingUrl"
        case promotionaltext = "promotionalText"
        case supporturl = "supportUrl"
        case whatsnew = "whatsNew"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case apppreviews = "appPreviews"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter filterPreviewType: (query) filter by attribute &#x27;previewType&#x27; (optional)
     - parameter filterAppCustomProductPageLocalization: (query) filter by id(s) of related &#x27;appCustomProductPageLocalization&#x27; (optional)
     - parameter filterAppStoreVersionLocalization: (query) filter by id(s) of related &#x27;appStoreVersionLocalization&#x27; (optional)
     - parameter fieldsAppCustomProductPageLocalizations: (query) the fields to include for returned resources of type appCustomProductPageLocalizations (optional)
     - parameter fieldsAppStoreVersionExperimentTreatmentLocalizations: (query) the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations (optional)
     - parameter fieldsAppPreviews: (query) the fields to include for returned resources of type appPreviews (optional)
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter fieldsAppStoreVersionLocalizations: (query) the fields to include for returned resources of type appStoreVersionLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitAppPreviews: (query) maximum number of related appPreviews returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated(_id: String, filterPreviewType: [String]? = nil, filterAppCustomProductPageLocalization: [String]? = nil, filterAppStoreVersionLocalization: [String]? = nil, fieldsAppCustomProductPageLocalizations: [String]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [String]? = nil, fieldsAppPreviews: [String]? = nil, fieldsAppPreviewSets: [String]? = nil, fieldsAppStoreVersionLocalizations: [String]? = nil, limit: Int? = nil, limitAppPreviews: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: AppPreviewSetsResponse?,_ error: Error?) -> Void)) {
        appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedWithRequestBuilder(_id: _id, filterPreviewType: filterPreviewType, filterAppCustomProductPageLocalization: filterAppCustomProductPageLocalization, filterAppStoreVersionLocalization: filterAppStoreVersionLocalization, fieldsAppCustomProductPageLocalizations: fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations: fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppPreviews: fieldsAppPreviews, fieldsAppPreviewSets: fieldsAppPreviewSets, fieldsAppStoreVersionLocalizations: fieldsAppStoreVersionLocalizations, limit: limit, limitAppPreviews: limitAppPreviews, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appPreviews" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviews"
        }, {
          "id" : "id",
          "type" : "appPreviews"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "previewType" : "IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviewSets"
  }, {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appPreviews" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviews"
        }, {
          "id" : "id",
          "type" : "appPreviews"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "previewType" : "IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPreviewSets"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter filterPreviewType: (query) filter by attribute &#x27;previewType&#x27; (optional)
     - parameter filterAppCustomProductPageLocalization: (query) filter by id(s) of related &#x27;appCustomProductPageLocalization&#x27; (optional)
     - parameter filterAppStoreVersionLocalization: (query) filter by id(s) of related &#x27;appStoreVersionLocalization&#x27; (optional)
     - parameter fieldsAppCustomProductPageLocalizations: (query) the fields to include for returned resources of type appCustomProductPageLocalizations (optional)
     - parameter fieldsAppStoreVersionExperimentTreatmentLocalizations: (query) the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations (optional)
     - parameter fieldsAppPreviews: (query) the fields to include for returned resources of type appPreviews (optional)
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter fieldsAppStoreVersionLocalizations: (query) the fields to include for returned resources of type appStoreVersionLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitAppPreviews: (query) maximum number of related appPreviews returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<AppPreviewSetsResponse> 
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedWithRequestBuilder(_id: String, filterPreviewType: [String]? = nil, filterAppCustomProductPageLocalization: [String]? = nil, filterAppStoreVersionLocalization: [String]? = nil, fieldsAppCustomProductPageLocalizations: [String]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [String]? = nil, fieldsAppPreviews: [String]? = nil, fieldsAppPreviewSets: [String]? = nil, fieldsAppStoreVersionLocalizations: [String]? = nil, limit: Int? = nil, limitAppPreviews: Int? = nil, include: [String]? = nil) -> RequestBuilder<AppPreviewSetsResponse> {
        var path = "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[previewType]": filterPreviewType, 
                        "filter[appCustomProductPageLocalization]": filterAppCustomProductPageLocalization, 
                        "filter[appStoreVersionLocalization]": filterAppStoreVersionLocalization, 
                        "fields[appCustomProductPageLocalizations]": fieldsAppCustomProductPageLocalizations, 
                        "fields[appStoreVersionExperimentTreatmentLocalizations]": fieldsAppStoreVersionExperimentTreatmentLocalizations, 
                        "fields[appPreviews]": fieldsAppPreviews, 
                        "fields[appPreviewSets]": fieldsAppPreviewSets, 
                        "fields[appStoreVersionLocalizations]": fieldsAppStoreVersionLocalizations, 
                        "limit": limit?.encodeToJSON(), 
                        "limit[appPreviews]": limitAppPreviews?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<AppPreviewSetsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter filterScreenshotDisplayType
     */
    public enum FilterScreenshotDisplayType_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case appIphone65 = "APP_IPHONE_65"
        case appIphone58 = "APP_IPHONE_58"
        case appIphone55 = "APP_IPHONE_55"
        case appIphone47 = "APP_IPHONE_47"
        case appIphone40 = "APP_IPHONE_40"
        case appIphone35 = "APP_IPHONE_35"
        case appIpadPro3gen129 = "APP_IPAD_PRO_3GEN_129"
        case appIpadPro3gen11 = "APP_IPAD_PRO_3GEN_11"
        case appIpadPro129 = "APP_IPAD_PRO_129"
        case appIpad105 = "APP_IPAD_105"
        case appIpad97 = "APP_IPAD_97"
        case appDesktop = "APP_DESKTOP"
        case appWatchSeries7 = "APP_WATCH_SERIES_7"
        case appWatchSeries4 = "APP_WATCH_SERIES_4"
        case appWatchSeries3 = "APP_WATCH_SERIES_3"
        case appAppleTv = "APP_APPLE_TV"
        case imessageAppIphone65 = "IMESSAGE_APP_IPHONE_65"
        case imessageAppIphone58 = "IMESSAGE_APP_IPHONE_58"
        case imessageAppIphone55 = "IMESSAGE_APP_IPHONE_55"
        case imessageAppIphone47 = "IMESSAGE_APP_IPHONE_47"
        case imessageAppIphone40 = "IMESSAGE_APP_IPHONE_40"
        case imessageAppIpadPro3gen129 = "IMESSAGE_APP_IPAD_PRO_3GEN_129"
        case imessageAppIpadPro3gen11 = "IMESSAGE_APP_IPAD_PRO_3GEN_11"
        case imessageAppIpadPro129 = "IMESSAGE_APP_IPAD_PRO_129"
        case imessageAppIpad105 = "IMESSAGE_APP_IPAD_105"
        case imessageAppIpad97 = "IMESSAGE_APP_IPAD_97"
    }

    /**
     * enum for parameter fieldsAppScreenshotSets
     */
    public enum FieldsAppScreenshotSets_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case appscreenshots = "appScreenshots"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
        case screenshotdisplaytype = "screenshotDisplayType"
    }

    /**
     * enum for parameter fieldsAppCustomProductPageLocalizations
     */
    public enum FieldsAppCustomProductPageLocalizations_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case appcustomproductpageversion = "appCustomProductPageVersion"
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case locale = "locale"
        case promotionaltext = "promotionalText"
    }

    /**
     * enum for parameter fieldsAppStoreVersionExperimentTreatmentLocalizations
     */
    public enum FieldsAppStoreVersionExperimentTreatmentLocalizations_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case appstoreversionexperimenttreatment = "appStoreVersionExperimentTreatment"
        case locale = "locale"
    }

    /**
     * enum for parameter fieldsAppScreenshots
     */
    public enum FieldsAppScreenshots_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case appscreenshotset = "appScreenshotSet"
        case assetdeliverystate = "assetDeliveryState"
        case assettoken = "assetToken"
        case assettype = "assetType"
        case filename = "fileName"
        case filesize = "fileSize"
        case imageasset = "imageAsset"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**
     * enum for parameter fieldsAppStoreVersionLocalizations
     */
    public enum FieldsAppStoreVersionLocalizations_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case appstoreversion = "appStoreVersion"
        case _description = "description"
        case keywords = "keywords"
        case locale = "locale"
        case marketingurl = "marketingUrl"
        case promotionaltext = "promotionalText"
        case supporturl = "supportUrl"
        case whatsnew = "whatsNew"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case appscreenshots = "appScreenshots"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter filterScreenshotDisplayType: (query) filter by attribute &#x27;screenshotDisplayType&#x27; (optional)
     - parameter filterAppCustomProductPageLocalization: (query) filter by id(s) of related &#x27;appCustomProductPageLocalization&#x27; (optional)
     - parameter filterAppStoreVersionLocalization: (query) filter by id(s) of related &#x27;appStoreVersionLocalization&#x27; (optional)
     - parameter fieldsAppScreenshotSets: (query) the fields to include for returned resources of type appScreenshotSets (optional)
     - parameter fieldsAppCustomProductPageLocalizations: (query) the fields to include for returned resources of type appCustomProductPageLocalizations (optional)
     - parameter fieldsAppStoreVersionExperimentTreatmentLocalizations: (query) the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations (optional)
     - parameter fieldsAppScreenshots: (query) the fields to include for returned resources of type appScreenshots (optional)
     - parameter fieldsAppStoreVersionLocalizations: (query) the fields to include for returned resources of type appStoreVersionLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitAppScreenshots: (query) maximum number of related appScreenshots returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated(_id: String, filterScreenshotDisplayType: [String]? = nil, filterAppCustomProductPageLocalization: [String]? = nil, filterAppStoreVersionLocalization: [String]? = nil, fieldsAppScreenshotSets: [String]? = nil, fieldsAppCustomProductPageLocalizations: [String]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [String]? = nil, fieldsAppScreenshots: [String]? = nil, fieldsAppStoreVersionLocalizations: [String]? = nil, limit: Int? = nil, limitAppScreenshots: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: AppScreenshotSetsResponse?,_ error: Error?) -> Void)) {
        appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedWithRequestBuilder(_id: _id, filterScreenshotDisplayType: filterScreenshotDisplayType, filterAppCustomProductPageLocalization: filterAppCustomProductPageLocalization, filterAppStoreVersionLocalization: filterAppStoreVersionLocalization, fieldsAppScreenshotSets: fieldsAppScreenshotSets, fieldsAppCustomProductPageLocalizations: fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations: fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppScreenshots: fieldsAppScreenshots, fieldsAppStoreVersionLocalizations: fieldsAppStoreVersionLocalizations, limit: limit, limitAppScreenshots: limitAppScreenshots, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appScreenshots" : {
        "data" : [ {
          "id" : "id",
          "type" : "appScreenshots"
        }, {
          "id" : "id",
          "type" : "appScreenshots"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "screenshotDisplayType" : "APP_IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appScreenshotSets"
  }, {
    "relationships" : {
      "appStoreVersionExperimentTreatmentLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatmentLocalizations"
        }
      },
      "appCustomProductPageLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appCustomProductPageLocalizations"
        }
      },
      "appStoreVersionLocalization" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionLocalizations"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appScreenshots" : {
        "data" : [ {
          "id" : "id",
          "type" : "appScreenshots"
        }, {
          "id" : "id",
          "type" : "appScreenshots"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "screenshotDisplayType" : "APP_IPHONE_65"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appScreenshotSets"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter filterScreenshotDisplayType: (query) filter by attribute &#x27;screenshotDisplayType&#x27; (optional)
     - parameter filterAppCustomProductPageLocalization: (query) filter by id(s) of related &#x27;appCustomProductPageLocalization&#x27; (optional)
     - parameter filterAppStoreVersionLocalization: (query) filter by id(s) of related &#x27;appStoreVersionLocalization&#x27; (optional)
     - parameter fieldsAppScreenshotSets: (query) the fields to include for returned resources of type appScreenshotSets (optional)
     - parameter fieldsAppCustomProductPageLocalizations: (query) the fields to include for returned resources of type appCustomProductPageLocalizations (optional)
     - parameter fieldsAppStoreVersionExperimentTreatmentLocalizations: (query) the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations (optional)
     - parameter fieldsAppScreenshots: (query) the fields to include for returned resources of type appScreenshots (optional)
     - parameter fieldsAppStoreVersionLocalizations: (query) the fields to include for returned resources of type appStoreVersionLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitAppScreenshots: (query) maximum number of related appScreenshots returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<AppScreenshotSetsResponse> 
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedWithRequestBuilder(_id: String, filterScreenshotDisplayType: [String]? = nil, filterAppCustomProductPageLocalization: [String]? = nil, filterAppStoreVersionLocalization: [String]? = nil, fieldsAppScreenshotSets: [String]? = nil, fieldsAppCustomProductPageLocalizations: [String]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [String]? = nil, fieldsAppScreenshots: [String]? = nil, fieldsAppStoreVersionLocalizations: [String]? = nil, limit: Int? = nil, limitAppScreenshots: Int? = nil, include: [String]? = nil) -> RequestBuilder<AppScreenshotSetsResponse> {
        var path = "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[screenshotDisplayType]": filterScreenshotDisplayType, 
                        "filter[appCustomProductPageLocalization]": filterAppCustomProductPageLocalization, 
                        "filter[appStoreVersionLocalization]": filterAppStoreVersionLocalization, 
                        "fields[appScreenshotSets]": fieldsAppScreenshotSets, 
                        "fields[appCustomProductPageLocalizations]": fieldsAppCustomProductPageLocalizations, 
                        "fields[appStoreVersionExperimentTreatmentLocalizations]": fieldsAppStoreVersionExperimentTreatmentLocalizations, 
                        "fields[appScreenshots]": fieldsAppScreenshots, 
                        "fields[appStoreVersionLocalizations]": fieldsAppStoreVersionLocalizations, 
                        "limit": limit?.encodeToJSON(), 
                        "limit[appScreenshots]": limitAppScreenshots?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<AppScreenshotSetsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) AppStoreVersionExperimentTreatmentLocalization representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsCreateInstance(body: AppStoreVersionExperimentTreatmentLocalizationCreateRequest, completion: @escaping ((_ data: AppStoreVersionExperimentTreatmentLocalizationResponse?,_ error: Error?) -> Void)) {
        appStoreVersionExperimentTreatmentLocalizationsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/appStoreVersionExperimentTreatmentLocalizations
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersionExperimentTreatment" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatments"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appScreenshotSets" : {
        "data" : [ {
          "id" : "id",
          "type" : "appScreenshotSets"
        }, {
          "id" : "id",
          "type" : "appScreenshotSets"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appPreviewSets" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviewSets"
        }, {
          "id" : "id",
          "type" : "appPreviewSets"
        } ]
      }
    },
    "attributes" : {
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appStoreVersionExperimentTreatmentLocalizations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) AppStoreVersionExperimentTreatmentLocalization representation 

     - returns: RequestBuilder<AppStoreVersionExperimentTreatmentLocalizationResponse> 
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsCreateInstanceWithRequestBuilder(body: AppStoreVersionExperimentTreatmentLocalizationCreateRequest) -> RequestBuilder<AppStoreVersionExperimentTreatmentLocalizationResponse> {
        let path = "/v1/appStoreVersionExperimentTreatmentLocalizations"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppStoreVersionExperimentTreatmentLocalizationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsDeleteInstance(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        appStoreVersionExperimentTreatmentLocalizationsDeleteInstanceWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v1/appStoreVersionExperimentTreatmentLocalizations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsDeleteInstanceWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppStoreVersionExperimentTreatmentLocalizations
     */
    public enum FieldsAppStoreVersionExperimentTreatmentLocalizations_appStoreVersionExperimentTreatmentLocalizationsGetInstance: String { 
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case appstoreversionexperimenttreatment = "appStoreVersionExperimentTreatment"
        case locale = "locale"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appStoreVersionExperimentTreatmentLocalizationsGetInstance: String { 
        case apppreviewsets = "appPreviewSets"
        case appscreenshotsets = "appScreenshotSets"
        case appstoreversionexperimenttreatment = "appStoreVersionExperimentTreatment"
    }

    /**
     * enum for parameter fieldsAppScreenshotSets
     */
    public enum FieldsAppScreenshotSets_appStoreVersionExperimentTreatmentLocalizationsGetInstance: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case appscreenshots = "appScreenshots"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
        case screenshotdisplaytype = "screenshotDisplayType"
    }

    /**
     * enum for parameter fieldsAppPreviewSets
     */
    public enum FieldsAppPreviewSets_appStoreVersionExperimentTreatmentLocalizationsGetInstance: String { 
        case appcustomproductpagelocalization = "appCustomProductPageLocalization"
        case apppreviews = "appPreviews"
        case appstoreversionexperimenttreatmentlocalization = "appStoreVersionExperimentTreatmentLocalization"
        case appstoreversionlocalization = "appStoreVersionLocalization"
        case previewtype = "previewType"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppStoreVersionExperimentTreatmentLocalizations: (query) the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAppScreenshotSets: (query) the fields to include for returned resources of type appScreenshotSets (optional)
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter limitAppPreviewSets: (query) maximum number of related appPreviewSets returned (when they are included) (optional)
     - parameter limitAppScreenshotSets: (query) maximum number of related appScreenshotSets returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsGetInstance(_id: String, fieldsAppStoreVersionExperimentTreatmentLocalizations: [String]? = nil, include: [String]? = nil, fieldsAppScreenshotSets: [String]? = nil, fieldsAppPreviewSets: [String]? = nil, limitAppPreviewSets: Int? = nil, limitAppScreenshotSets: Int? = nil, completion: @escaping ((_ data: AppStoreVersionExperimentTreatmentLocalizationResponse?,_ error: Error?) -> Void)) {
        appStoreVersionExperimentTreatmentLocalizationsGetInstanceWithRequestBuilder(_id: _id, fieldsAppStoreVersionExperimentTreatmentLocalizations: fieldsAppStoreVersionExperimentTreatmentLocalizations, include: include, fieldsAppScreenshotSets: fieldsAppScreenshotSets, fieldsAppPreviewSets: fieldsAppPreviewSets, limitAppPreviewSets: limitAppPreviewSets, limitAppScreenshotSets: limitAppScreenshotSets).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appStoreVersionExperimentTreatmentLocalizations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appStoreVersionExperimentTreatment" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersionExperimentTreatments"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appScreenshotSets" : {
        "data" : [ {
          "id" : "id",
          "type" : "appScreenshotSets"
        }, {
          "id" : "id",
          "type" : "appScreenshotSets"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appPreviewSets" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPreviewSets"
        }, {
          "id" : "id",
          "type" : "appPreviewSets"
        } ]
      }
    },
    "attributes" : {
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appStoreVersionExperimentTreatmentLocalizations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppStoreVersionExperimentTreatmentLocalizations: (query) the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAppScreenshotSets: (query) the fields to include for returned resources of type appScreenshotSets (optional)
     - parameter fieldsAppPreviewSets: (query) the fields to include for returned resources of type appPreviewSets (optional)
     - parameter limitAppPreviewSets: (query) maximum number of related appPreviewSets returned (when they are included) (optional)
     - parameter limitAppScreenshotSets: (query) maximum number of related appScreenshotSets returned (when they are included) (optional)

     - returns: RequestBuilder<AppStoreVersionExperimentTreatmentLocalizationResponse> 
     */
    open class func appStoreVersionExperimentTreatmentLocalizationsGetInstanceWithRequestBuilder(_id: String, fieldsAppStoreVersionExperimentTreatmentLocalizations: [String]? = nil, include: [String]? = nil, fieldsAppScreenshotSets: [String]? = nil, fieldsAppPreviewSets: [String]? = nil, limitAppPreviewSets: Int? = nil, limitAppScreenshotSets: Int? = nil) -> RequestBuilder<AppStoreVersionExperimentTreatmentLocalizationResponse> {
        var path = "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appStoreVersionExperimentTreatmentLocalizations]": fieldsAppStoreVersionExperimentTreatmentLocalizations, 
                        "include": include, 
                        "fields[appScreenshotSets]": fieldsAppScreenshotSets, 
                        "fields[appPreviewSets]": fieldsAppPreviewSets, 
                        "limit[appPreviewSets]": limitAppPreviewSets?.encodeToJSON(), 
                        "limit[appScreenshotSets]": limitAppScreenshotSets?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppStoreVersionExperimentTreatmentLocalizationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
