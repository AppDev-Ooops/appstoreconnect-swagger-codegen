//
// UserInvitationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class UserInvitationsAPI {
    /**

     - parameter body: (body) UserInvitation representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userInvitationsCreateInstance(body: UserInvitationCreateRequest, completion: @escaping ((_ data: UserInvitationResponse?,_ error: Error?) -> Void)) {
        userInvitationsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/userInvitations
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "visibleApps" : {
        "data" : [ {
          "id" : "id",
          "type" : "apps"
        }, {
          "id" : "id",
          "type" : "apps"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "roles" : [ "ADMIN", "ADMIN" ],
      "allAppsVisible" : true,
      "email" : "",
      "provisioningAllowed" : true,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "userInvitations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  }, {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  } ]
}}]
     - parameter body: (body) UserInvitation representation 

     - returns: RequestBuilder<UserInvitationResponse> 
     */
    open class func userInvitationsCreateInstanceWithRequestBuilder(body: UserInvitationCreateRequest) -> RequestBuilder<UserInvitationResponse> {
        let path = "/v1/userInvitations"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UserInvitationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userInvitationsDeleteInstance(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        userInvitationsDeleteInstanceWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v1/userInvitations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func userInvitationsDeleteInstanceWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/v1/userInvitations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter filterRoles
     */
    public enum FilterRoles_userInvitationsGetCollection: String { 
        case admin = "ADMIN"
        case finance = "FINANCE"
        case accountHolder = "ACCOUNT_HOLDER"
        case sales = "SALES"
        case marketing = "MARKETING"
        case appManager = "APP_MANAGER"
        case developer = "DEVELOPER"
        case accessToReports = "ACCESS_TO_REPORTS"
        case customerSupport = "CUSTOMER_SUPPORT"
        case imageManager = "IMAGE_MANAGER"
        case createApps = "CREATE_APPS"
        case cloudManagedDeveloperId = "CLOUD_MANAGED_DEVELOPER_ID"
        case cloudManagedAppDistribution = "CLOUD_MANAGED_APP_DISTRIBUTION"
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_userInvitationsGetCollection: String { 
        case email = "email"
        case email_1 = "-email"
        case lastname = "lastName"
        case lastname_3 = "-lastName"
    }

    /**
     * enum for parameter fieldsUserInvitations
     */
    public enum FieldsUserInvitations_userInvitationsGetCollection: String { 
        case allappsvisible = "allAppsVisible"
        case email = "email"
        case expirationdate = "expirationDate"
        case firstname = "firstName"
        case lastname = "lastName"
        case provisioningallowed = "provisioningAllowed"
        case roles = "roles"
        case visibleapps = "visibleApps"
    }

    /**
     * enum for parameter include
     */
    public enum Include_userInvitationsGetCollection: String { 
        case visibleapps = "visibleApps"
    }

    /**
     * enum for parameter fieldsApps
     */
    public enum FieldsApps_userInvitationsGetCollection: String { 
        case appclips = "appClips"
        case appcustomproductpages = "appCustomProductPages"
        case appevents = "appEvents"
        case appinfos = "appInfos"
        case appstoreversions = "appStoreVersions"
        case availableinnewterritories = "availableInNewTerritories"
        case availableterritories = "availableTerritories"
        case betaapplocalizations = "betaAppLocalizations"
        case betaappreviewdetail = "betaAppReviewDetail"
        case betagroups = "betaGroups"
        case betalicenseagreement = "betaLicenseAgreement"
        case betatesters = "betaTesters"
        case builds = "builds"
        case bundleid = "bundleId"
        case ciproduct = "ciProduct"
        case contentrightsdeclaration = "contentRightsDeclaration"
        case customerreviews = "customerReviews"
        case enduserlicenseagreement = "endUserLicenseAgreement"
        case gamecenterenabledversions = "gameCenterEnabledVersions"
        case inapppurchases = "inAppPurchases"
        case inapppurchasesv2 = "inAppPurchasesV2"
        case isoreverwasmadeforkids = "isOrEverWasMadeForKids"
        case name = "name"
        case perfpowermetrics = "perfPowerMetrics"
        case preorder = "preOrder"
        case prereleaseversions = "preReleaseVersions"
        case pricepoints = "pricePoints"
        case prices = "prices"
        case primarylocale = "primaryLocale"
        case promotedpurchases = "promotedPurchases"
        case reviewsubmissions = "reviewSubmissions"
        case sku = "sku"
        case subscriptiongraceperiod = "subscriptionGracePeriod"
        case subscriptiongroups = "subscriptionGroups"
        case subscriptionstatusurl = "subscriptionStatusUrl"
        case subscriptionstatusurlforsandbox = "subscriptionStatusUrlForSandbox"
        case subscriptionstatusurlversion = "subscriptionStatusUrlVersion"
        case subscriptionstatusurlversionforsandbox = "subscriptionStatusUrlVersionForSandbox"
    }

    /**

     - parameter filterEmail: (query) filter by attribute &#x27;email&#x27; (optional)
     - parameter filterRoles: (query) filter by attribute &#x27;roles&#x27; (optional)
     - parameter filterVisibleApps: (query) filter by id(s) of related &#x27;visibleApps&#x27; (optional)
     - parameter sort: (query) comma-separated list of sort expressions; resources will be sorted as specified (optional)
     - parameter fieldsUserInvitations: (query) the fields to include for returned resources of type userInvitations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsApps: (query) the fields to include for returned resources of type apps (optional)
     - parameter limitVisibleApps: (query) maximum number of related visibleApps returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userInvitationsGetCollection(filterEmail: [String]? = nil, filterRoles: [String]? = nil, filterVisibleApps: [String]? = nil, sort: [String]? = nil, fieldsUserInvitations: [String]? = nil, limit: Int? = nil, include: [String]? = nil, fieldsApps: [String]? = nil, limitVisibleApps: Int? = nil, completion: @escaping ((_ data: UserInvitationsResponse?,_ error: Error?) -> Void)) {
        userInvitationsGetCollectionWithRequestBuilder(filterEmail: filterEmail, filterRoles: filterRoles, filterVisibleApps: filterVisibleApps, sort: sort, fieldsUserInvitations: fieldsUserInvitations, limit: limit, include: include, fieldsApps: fieldsApps, limitVisibleApps: limitVisibleApps).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/userInvitations
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "visibleApps" : {
        "data" : [ {
          "id" : "id",
          "type" : "apps"
        }, {
          "id" : "id",
          "type" : "apps"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "roles" : [ "ADMIN", "ADMIN" ],
      "allAppsVisible" : true,
      "email" : "",
      "provisioningAllowed" : true,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "userInvitations"
  }, {
    "relationships" : {
      "visibleApps" : {
        "data" : [ {
          "id" : "id",
          "type" : "apps"
        }, {
          "id" : "id",
          "type" : "apps"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "roles" : [ "ADMIN", "ADMIN" ],
      "allAppsVisible" : true,
      "email" : "",
      "provisioningAllowed" : true,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "userInvitations"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  }, {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  } ]
}}]
     - parameter filterEmail: (query) filter by attribute &#x27;email&#x27; (optional)
     - parameter filterRoles: (query) filter by attribute &#x27;roles&#x27; (optional)
     - parameter filterVisibleApps: (query) filter by id(s) of related &#x27;visibleApps&#x27; (optional)
     - parameter sort: (query) comma-separated list of sort expressions; resources will be sorted as specified (optional)
     - parameter fieldsUserInvitations: (query) the fields to include for returned resources of type userInvitations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsApps: (query) the fields to include for returned resources of type apps (optional)
     - parameter limitVisibleApps: (query) maximum number of related visibleApps returned (when they are included) (optional)

     - returns: RequestBuilder<UserInvitationsResponse> 
     */
    open class func userInvitationsGetCollectionWithRequestBuilder(filterEmail: [String]? = nil, filterRoles: [String]? = nil, filterVisibleApps: [String]? = nil, sort: [String]? = nil, fieldsUserInvitations: [String]? = nil, limit: Int? = nil, include: [String]? = nil, fieldsApps: [String]? = nil, limitVisibleApps: Int? = nil) -> RequestBuilder<UserInvitationsResponse> {
        let path = "/v1/userInvitations"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[email]": filterEmail, 
                        "filter[roles]": filterRoles, 
                        "filter[visibleApps]": filterVisibleApps, 
                        "sort": sort, 
                        "fields[userInvitations]": fieldsUserInvitations, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include, 
                        "fields[apps]": fieldsApps, 
                        "limit[visibleApps]": limitVisibleApps?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<UserInvitationsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsUserInvitations
     */
    public enum FieldsUserInvitations_userInvitationsGetInstance: String { 
        case allappsvisible = "allAppsVisible"
        case email = "email"
        case expirationdate = "expirationDate"
        case firstname = "firstName"
        case lastname = "lastName"
        case provisioningallowed = "provisioningAllowed"
        case roles = "roles"
        case visibleapps = "visibleApps"
    }

    /**
     * enum for parameter include
     */
    public enum Include_userInvitationsGetInstance: String { 
        case visibleapps = "visibleApps"
    }

    /**
     * enum for parameter fieldsApps
     */
    public enum FieldsApps_userInvitationsGetInstance: String { 
        case appclips = "appClips"
        case appcustomproductpages = "appCustomProductPages"
        case appevents = "appEvents"
        case appinfos = "appInfos"
        case appstoreversions = "appStoreVersions"
        case availableinnewterritories = "availableInNewTerritories"
        case availableterritories = "availableTerritories"
        case betaapplocalizations = "betaAppLocalizations"
        case betaappreviewdetail = "betaAppReviewDetail"
        case betagroups = "betaGroups"
        case betalicenseagreement = "betaLicenseAgreement"
        case betatesters = "betaTesters"
        case builds = "builds"
        case bundleid = "bundleId"
        case ciproduct = "ciProduct"
        case contentrightsdeclaration = "contentRightsDeclaration"
        case customerreviews = "customerReviews"
        case enduserlicenseagreement = "endUserLicenseAgreement"
        case gamecenterenabledversions = "gameCenterEnabledVersions"
        case inapppurchases = "inAppPurchases"
        case inapppurchasesv2 = "inAppPurchasesV2"
        case isoreverwasmadeforkids = "isOrEverWasMadeForKids"
        case name = "name"
        case perfpowermetrics = "perfPowerMetrics"
        case preorder = "preOrder"
        case prereleaseversions = "preReleaseVersions"
        case pricepoints = "pricePoints"
        case prices = "prices"
        case primarylocale = "primaryLocale"
        case promotedpurchases = "promotedPurchases"
        case reviewsubmissions = "reviewSubmissions"
        case sku = "sku"
        case subscriptiongraceperiod = "subscriptionGracePeriod"
        case subscriptiongroups = "subscriptionGroups"
        case subscriptionstatusurl = "subscriptionStatusUrl"
        case subscriptionstatusurlforsandbox = "subscriptionStatusUrlForSandbox"
        case subscriptionstatusurlversion = "subscriptionStatusUrlVersion"
        case subscriptionstatusurlversionforsandbox = "subscriptionStatusUrlVersionForSandbox"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsUserInvitations: (query) the fields to include for returned resources of type userInvitations (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsApps: (query) the fields to include for returned resources of type apps (optional)
     - parameter limitVisibleApps: (query) maximum number of related visibleApps returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userInvitationsGetInstance(_id: String, fieldsUserInvitations: [String]? = nil, include: [String]? = nil, fieldsApps: [String]? = nil, limitVisibleApps: Int? = nil, completion: @escaping ((_ data: UserInvitationResponse?,_ error: Error?) -> Void)) {
        userInvitationsGetInstanceWithRequestBuilder(_id: _id, fieldsUserInvitations: fieldsUserInvitations, include: include, fieldsApps: fieldsApps, limitVisibleApps: limitVisibleApps).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/userInvitations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "visibleApps" : {
        "data" : [ {
          "id" : "id",
          "type" : "apps"
        }, {
          "id" : "id",
          "type" : "apps"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "roles" : [ "ADMIN", "ADMIN" ],
      "allAppsVisible" : true,
      "email" : "",
      "provisioningAllowed" : true,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "userInvitations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  }, {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsUserInvitations: (query) the fields to include for returned resources of type userInvitations (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsApps: (query) the fields to include for returned resources of type apps (optional)
     - parameter limitVisibleApps: (query) maximum number of related visibleApps returned (when they are included) (optional)

     - returns: RequestBuilder<UserInvitationResponse> 
     */
    open class func userInvitationsGetInstanceWithRequestBuilder(_id: String, fieldsUserInvitations: [String]? = nil, include: [String]? = nil, fieldsApps: [String]? = nil, limitVisibleApps: Int? = nil) -> RequestBuilder<UserInvitationResponse> {
        var path = "/v1/userInvitations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[userInvitations]": fieldsUserInvitations, 
                        "include": include, 
                        "fields[apps]": fieldsApps, 
                        "limit[visibleApps]": limitVisibleApps?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<UserInvitationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsApps
     */
    public enum FieldsApps_userInvitationsVisibleAppsGetToManyRelated: String { 
        case appclips = "appClips"
        case appcustomproductpages = "appCustomProductPages"
        case appevents = "appEvents"
        case appinfos = "appInfos"
        case appstoreversions = "appStoreVersions"
        case availableinnewterritories = "availableInNewTerritories"
        case availableterritories = "availableTerritories"
        case betaapplocalizations = "betaAppLocalizations"
        case betaappreviewdetail = "betaAppReviewDetail"
        case betagroups = "betaGroups"
        case betalicenseagreement = "betaLicenseAgreement"
        case betatesters = "betaTesters"
        case builds = "builds"
        case bundleid = "bundleId"
        case ciproduct = "ciProduct"
        case contentrightsdeclaration = "contentRightsDeclaration"
        case customerreviews = "customerReviews"
        case enduserlicenseagreement = "endUserLicenseAgreement"
        case gamecenterenabledversions = "gameCenterEnabledVersions"
        case inapppurchases = "inAppPurchases"
        case inapppurchasesv2 = "inAppPurchasesV2"
        case isoreverwasmadeforkids = "isOrEverWasMadeForKids"
        case name = "name"
        case perfpowermetrics = "perfPowerMetrics"
        case preorder = "preOrder"
        case prereleaseversions = "preReleaseVersions"
        case pricepoints = "pricePoints"
        case prices = "prices"
        case primarylocale = "primaryLocale"
        case promotedpurchases = "promotedPurchases"
        case reviewsubmissions = "reviewSubmissions"
        case sku = "sku"
        case subscriptiongraceperiod = "subscriptionGracePeriod"
        case subscriptiongroups = "subscriptionGroups"
        case subscriptionstatusurl = "subscriptionStatusUrl"
        case subscriptionstatusurlforsandbox = "subscriptionStatusUrlForSandbox"
        case subscriptionstatusurlversion = "subscriptionStatusUrlVersion"
        case subscriptionstatusurlversionforsandbox = "subscriptionStatusUrlVersionForSandbox"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsApps: (query) the fields to include for returned resources of type apps (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userInvitationsVisibleAppsGetToManyRelated(_id: String, fieldsApps: [String]? = nil, limit: Int? = nil, completion: @escaping ((_ data: AppsResponse?,_ error: Error?) -> Void)) {
        userInvitationsVisibleAppsGetToManyRelatedWithRequestBuilder(_id: _id, fieldsApps: fieldsApps, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/userInvitations/{id}/visibleApps
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  }, {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsApps: (query) the fields to include for returned resources of type apps (optional)
     - parameter limit: (query) maximum resources per page (optional)

     - returns: RequestBuilder<AppsResponse> 
     */
    open class func userInvitationsVisibleAppsGetToManyRelatedWithRequestBuilder(_id: String, fieldsApps: [String]? = nil, limit: Int? = nil) -> RequestBuilder<AppsResponse> {
        var path = "/v1/userInvitations/{id}/visibleApps"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[apps]": fieldsApps, 
                        "limit": limit?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
