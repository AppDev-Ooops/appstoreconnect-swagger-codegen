//
// AppClipAppStoreReviewDetailsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppClipAppStoreReviewDetailsAPI {
    /**

     - parameter body: (body) AppClipAppStoreReviewDetail representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appClipAppStoreReviewDetailsCreateInstance(body: AppClipAppStoreReviewDetailCreateRequest, completion: @escaping ((_ data: AppClipAppStoreReviewDetailResponse?,_ error: Error?) -> Void)) {
        appClipAppStoreReviewDetailsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/appClipAppStoreReviewDetails
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appClipDefaultExperience" : {
        "data" : {
          "id" : "id",
          "type" : "appClipDefaultExperiences"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "invocationUrls" : [ "http://example.com/aeiou", "http://example.com/aeiou" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appClipAppStoreReviewDetails"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "appClipAppStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appClipAppStoreReviewDetails"
        }
      },
      "appClip" : {
        "data" : {
          "id" : "id",
          "type" : "appClips"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appClipDefaultExperienceLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        }, {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "releaseWithAppStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      }
    },
    "attributes" : {
      "action" : "OPEN"
    },
    "id" : "id",
    "type" : "appClipDefaultExperiences"
  }, {
    "relationships" : {
      "appClipAppStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appClipAppStoreReviewDetails"
        }
      },
      "appClip" : {
        "data" : {
          "id" : "id",
          "type" : "appClips"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appClipDefaultExperienceLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        }, {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "releaseWithAppStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      }
    },
    "attributes" : {
      "action" : "OPEN"
    },
    "id" : "id",
    "type" : "appClipDefaultExperiences"
  } ]
}}]
     - parameter body: (body) AppClipAppStoreReviewDetail representation 

     - returns: RequestBuilder<AppClipAppStoreReviewDetailResponse> 
     */
    open class func appClipAppStoreReviewDetailsCreateInstanceWithRequestBuilder(body: AppClipAppStoreReviewDetailCreateRequest) -> RequestBuilder<AppClipAppStoreReviewDetailResponse> {
        let path = "/v1/appClipAppStoreReviewDetails"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppClipAppStoreReviewDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter fieldsAppClipAppStoreReviewDetails
     */
    public enum FieldsAppClipAppStoreReviewDetails_appClipAppStoreReviewDetailsGetInstance: String { 
        case appclipdefaultexperience = "appClipDefaultExperience"
        case invocationurls = "invocationUrls"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appClipAppStoreReviewDetailsGetInstance: String { 
        case appclipdefaultexperience = "appClipDefaultExperience"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppClipAppStoreReviewDetails: (query) the fields to include for returned resources of type appClipAppStoreReviewDetails (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appClipAppStoreReviewDetailsGetInstance(_id: String, fieldsAppClipAppStoreReviewDetails: [String]? = nil, include: [String]? = nil, completion: @escaping ((_ data: AppClipAppStoreReviewDetailResponse?,_ error: Error?) -> Void)) {
        appClipAppStoreReviewDetailsGetInstanceWithRequestBuilder(_id: _id, fieldsAppClipAppStoreReviewDetails: fieldsAppClipAppStoreReviewDetails, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appClipAppStoreReviewDetails/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appClipDefaultExperience" : {
        "data" : {
          "id" : "id",
          "type" : "appClipDefaultExperiences"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "invocationUrls" : [ "http://example.com/aeiou", "http://example.com/aeiou" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appClipAppStoreReviewDetails"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "appClipAppStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appClipAppStoreReviewDetails"
        }
      },
      "appClip" : {
        "data" : {
          "id" : "id",
          "type" : "appClips"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appClipDefaultExperienceLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        }, {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "releaseWithAppStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      }
    },
    "attributes" : {
      "action" : "OPEN"
    },
    "id" : "id",
    "type" : "appClipDefaultExperiences"
  }, {
    "relationships" : {
      "appClipAppStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appClipAppStoreReviewDetails"
        }
      },
      "appClip" : {
        "data" : {
          "id" : "id",
          "type" : "appClips"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appClipDefaultExperienceLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        }, {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "releaseWithAppStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      }
    },
    "attributes" : {
      "action" : "OPEN"
    },
    "id" : "id",
    "type" : "appClipDefaultExperiences"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppClipAppStoreReviewDetails: (query) the fields to include for returned resources of type appClipAppStoreReviewDetails (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<AppClipAppStoreReviewDetailResponse> 
     */
    open class func appClipAppStoreReviewDetailsGetInstanceWithRequestBuilder(_id: String, fieldsAppClipAppStoreReviewDetails: [String]? = nil, include: [String]? = nil) -> RequestBuilder<AppClipAppStoreReviewDetailResponse> {
        var path = "/v1/appClipAppStoreReviewDetails/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appClipAppStoreReviewDetails]": fieldsAppClipAppStoreReviewDetails, 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<AppClipAppStoreReviewDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) AppClipAppStoreReviewDetail representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appClipAppStoreReviewDetailsUpdateInstance(body: AppClipAppStoreReviewDetailUpdateRequest, _id: String, completion: @escaping ((_ data: AppClipAppStoreReviewDetailResponse?,_ error: Error?) -> Void)) {
        appClipAppStoreReviewDetailsUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/appClipAppStoreReviewDetails/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "appClipDefaultExperience" : {
        "data" : {
          "id" : "id",
          "type" : "appClipDefaultExperiences"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "invocationUrls" : [ "http://example.com/aeiou", "http://example.com/aeiou" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appClipAppStoreReviewDetails"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "appClipAppStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appClipAppStoreReviewDetails"
        }
      },
      "appClip" : {
        "data" : {
          "id" : "id",
          "type" : "appClips"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appClipDefaultExperienceLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        }, {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "releaseWithAppStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      }
    },
    "attributes" : {
      "action" : "OPEN"
    },
    "id" : "id",
    "type" : "appClipDefaultExperiences"
  }, {
    "relationships" : {
      "appClipAppStoreReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "appClipAppStoreReviewDetails"
        }
      },
      "appClip" : {
        "data" : {
          "id" : "id",
          "type" : "appClips"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "appClipDefaultExperienceLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        }, {
          "id" : "id",
          "type" : "appClipDefaultExperienceLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "releaseWithAppStoreVersion" : {
        "data" : {
          "id" : "id",
          "type" : "appStoreVersions"
        }
      }
    },
    "attributes" : {
      "action" : "OPEN"
    },
    "id" : "id",
    "type" : "appClipDefaultExperiences"
  } ]
}}]
     - parameter body: (body) AppClipAppStoreReviewDetail representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<AppClipAppStoreReviewDetailResponse> 
     */
    open class func appClipAppStoreReviewDetailsUpdateInstanceWithRequestBuilder(body: AppClipAppStoreReviewDetailUpdateRequest, _id: String) -> RequestBuilder<AppClipAppStoreReviewDetailResponse> {
        var path = "/v1/appClipAppStoreReviewDetails/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppClipAppStoreReviewDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
