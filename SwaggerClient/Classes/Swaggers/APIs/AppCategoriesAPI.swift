//
// AppCategoriesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppCategoriesAPI {
    /**
     * enum for parameter filterPlatforms
     */
    public enum FilterPlatforms_appCategoriesGetCollection: String { 
        case ios = "IOS"
        case macOs = "MAC_OS"
        case tvOs = "TV_OS"
    }

    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesGetCollection: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appCategoriesGetCollection: String { 
        case parent = "parent"
        case subcategories = "subcategories"
    }

    /**

     - parameter filterPlatforms: (query) filter by attribute &#x27;platforms&#x27; (optional)
     - parameter existsParent: (query) filter by existence or non-existence of related &#x27;parent&#x27; (optional)
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appCategoriesGetCollection(filterPlatforms: [String]? = nil, existsParent: Bool? = nil, fieldsAppCategories: [String]? = nil, limit: Int? = nil, include: [String]? = nil, limitSubcategories: Int? = nil, completion: @escaping ((_ data: AppCategoriesResponse?,_ error: Error?) -> Void)) {
        appCategoriesGetCollectionWithRequestBuilder(filterPlatforms: filterPlatforms, existsParent: existsParent, fieldsAppCategories: fieldsAppCategories, limit: limit, include: include, limitSubcategories: limitSubcategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appCategories
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  }, {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  } ],
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter filterPlatforms: (query) filter by attribute &#x27;platforms&#x27; (optional)
     - parameter existsParent: (query) filter by existence or non-existence of related &#x27;parent&#x27; (optional)
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)

     - returns: RequestBuilder<AppCategoriesResponse> 
     */
    open class func appCategoriesGetCollectionWithRequestBuilder(filterPlatforms: [String]? = nil, existsParent: Bool? = nil, fieldsAppCategories: [String]? = nil, limit: Int? = nil, include: [String]? = nil, limitSubcategories: Int? = nil) -> RequestBuilder<AppCategoriesResponse> {
        let path = "/v1/appCategories"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[platforms]": filterPlatforms, 
                        "exists[parent]": existsParent, 
                        "fields[appCategories]": fieldsAppCategories, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include, 
                        "limit[subcategories]": limitSubcategories?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppCategoriesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesGetInstance: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appCategoriesGetInstance: String { 
        case parent = "parent"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appCategoriesGetInstance(_id: String, fieldsAppCategories: [String]? = nil, include: [String]? = nil, limitSubcategories: Int? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appCategoriesGetInstanceWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories, include: include, limitSubcategories: limitSubcategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appCategories/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appCategoriesGetInstanceWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil, include: [String]? = nil, limitSubcategories: Int? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appCategories/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories, 
                        "include": include, 
                        "limit[subcategories]": limitSubcategories?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesParentGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appCategoriesParentGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appCategoriesParentGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appCategories/{id}/parent
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appCategoriesParentGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appCategories/{id}/parent"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesSubcategoriesGetToManyRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appCategoriesSubcategoriesGetToManyRelated(_id: String, fieldsAppCategories: [String]? = nil, limit: Int? = nil, completion: @escaping ((_ data: AppCategoriesResponse?,_ error: Error?) -> Void)) {
        appCategoriesSubcategoriesGetToManyRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appCategories/{id}/subcategories
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  }, {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  } ],
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)

     - returns: RequestBuilder<AppCategoriesResponse> 
     */
    open class func appCategoriesSubcategoriesGetToManyRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil, limit: Int? = nil) -> RequestBuilder<AppCategoriesResponse> {
        var path = "/v1/appCategories/{id}/subcategories"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories, 
                        "limit": limit?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppCategoriesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
