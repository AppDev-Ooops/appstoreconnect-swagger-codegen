//
// CiArtifactsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class CiArtifactsAPI {
    /**
     * enum for parameter fieldsCiArtifacts
     */
    public enum FieldsCiArtifacts_ciArtifactsGetInstance: String { 
        case downloadurl = "downloadUrl"
        case filename = "fileName"
        case filesize = "fileSize"
        case filetype = "fileType"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsCiArtifacts: (query) the fields to include for returned resources of type ciArtifacts (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func ciArtifactsGetInstance(_id: String, fieldsCiArtifacts: [String]? = nil, completion: @escaping ((_ data: CiArtifactResponse?,_ error: Error?) -> Void)) {
        ciArtifactsGetInstanceWithRequestBuilder(_id: _id, fieldsCiArtifacts: fieldsCiArtifacts).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/ciArtifacts/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "downloadUrl" : "http://example.com/aeiou",
      "fileType" : "ARCHIVE"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ciArtifacts"
  },
  "links" : {
    "self" : "self"
  }
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsCiArtifacts: (query) the fields to include for returned resources of type ciArtifacts (optional)

     - returns: RequestBuilder<CiArtifactResponse> 
     */
    open class func ciArtifactsGetInstanceWithRequestBuilder(_id: String, fieldsCiArtifacts: [String]? = nil) -> RequestBuilder<CiArtifactResponse> {
        var path = "/v1/ciArtifacts/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[ciArtifacts]": fieldsCiArtifacts
        ])


        let requestBuilder: RequestBuilder<CiArtifactResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
