//
// AppPricePointsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppPricePointsAPI {
    /**
     * enum for parameter fieldsAppPricePoints
     */
    public enum FieldsAppPricePoints_appPricePointsGetCollection: String { 
        case customerprice = "customerPrice"
        case pricetier = "priceTier"
        case proceeds = "proceeds"
        case territory = "territory"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appPricePointsGetCollection: String { 
        case pricetier = "priceTier"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_appPricePointsGetCollection: String { 
        case currency = "currency"
    }

    /**

     - parameter filterPriceTier: (query) filter by id(s) of related &#x27;priceTier&#x27; (optional)
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsAppPricePoints: (query) the fields to include for returned resources of type appPricePoints (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPricePointsGetCollection(filterPriceTier: [String]? = nil, filterTerritory: [String]? = nil, fieldsAppPricePoints: [String]? = nil, limit: Int? = nil, include: [String]? = nil, fieldsTerritories: [String]? = nil, completion: @escaping ((_ data: AppPricePointsResponse?,_ error: Error?) -> Void)) {
        appPricePointsGetCollectionWithRequestBuilder(filterPriceTier: filterPriceTier, filterTerritory: filterTerritory, fieldsAppPricePoints: fieldsAppPricePoints, limit: limit, include: include, fieldsTerritories: fieldsTerritories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appPricePoints
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "priceTier" : {
        "data" : {
          "id" : "id",
          "type" : "appPriceTiers"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "attributes" : {
      "proceeds" : "proceeds",
      "customerPrice" : "customerPrice"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPricePoints"
  }, {
    "relationships" : {
      "priceTier" : {
        "data" : {
          "id" : "id",
          "type" : "appPriceTiers"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "attributes" : {
      "proceeds" : "proceeds",
      "customerPrice" : "customerPrice"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPricePoints"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter filterPriceTier: (query) filter by id(s) of related &#x27;priceTier&#x27; (optional)
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsAppPricePoints: (query) the fields to include for returned resources of type appPricePoints (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)

     - returns: RequestBuilder<AppPricePointsResponse> 
     */
    open class func appPricePointsGetCollectionWithRequestBuilder(filterPriceTier: [String]? = nil, filterTerritory: [String]? = nil, fieldsAppPricePoints: [String]? = nil, limit: Int? = nil, include: [String]? = nil, fieldsTerritories: [String]? = nil) -> RequestBuilder<AppPricePointsResponse> {
        let path = "/v1/appPricePoints"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[priceTier]": filterPriceTier, 
                        "filter[territory]": filterTerritory, 
                        "fields[appPricePoints]": fieldsAppPricePoints, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include, 
                        "fields[territories]": fieldsTerritories
        ])


        let requestBuilder: RequestBuilder<AppPricePointsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppPricePoints
     */
    public enum FieldsAppPricePoints_appPricePointsGetInstance: String { 
        case customerprice = "customerPrice"
        case pricetier = "priceTier"
        case proceeds = "proceeds"
        case territory = "territory"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appPricePointsGetInstance: String { 
        case pricetier = "priceTier"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_appPricePointsGetInstance: String { 
        case currency = "currency"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppPricePoints: (query) the fields to include for returned resources of type appPricePoints (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPricePointsGetInstance(_id: String, fieldsAppPricePoints: [String]? = nil, include: [String]? = nil, fieldsTerritories: [String]? = nil, completion: @escaping ((_ data: AppPricePointResponse?,_ error: Error?) -> Void)) {
        appPricePointsGetInstanceWithRequestBuilder(_id: _id, fieldsAppPricePoints: fieldsAppPricePoints, include: include, fieldsTerritories: fieldsTerritories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appPricePoints/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "priceTier" : {
        "data" : {
          "id" : "id",
          "type" : "appPriceTiers"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "attributes" : {
      "proceeds" : "proceeds",
      "customerPrice" : "customerPrice"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appPricePoints"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppPricePoints: (query) the fields to include for returned resources of type appPricePoints (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)

     - returns: RequestBuilder<AppPricePointResponse> 
     */
    open class func appPricePointsGetInstanceWithRequestBuilder(_id: String, fieldsAppPricePoints: [String]? = nil, include: [String]? = nil, fieldsTerritories: [String]? = nil) -> RequestBuilder<AppPricePointResponse> {
        var path = "/v1/appPricePoints/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appPricePoints]": fieldsAppPricePoints, 
                        "include": include, 
                        "fields[territories]": fieldsTerritories
        ])


        let requestBuilder: RequestBuilder<AppPricePointResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_appPricePointsTerritoryGetToOneRelated: String { 
        case currency = "currency"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appPricePointsTerritoryGetToOneRelated(_id: String, fieldsTerritories: [String]? = nil, completion: @escaping ((_ data: TerritoryResponse?,_ error: Error?) -> Void)) {
        appPricePointsTerritoryGetToOneRelatedWithRequestBuilder(_id: _id, fieldsTerritories: fieldsTerritories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appPricePoints/{id}/territory
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "attributes" : {
      "currency" : "currency"
    },
    "id" : "id",
    "type" : "territories"
  },
  "links" : {
    "self" : "self"
  }
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)

     - returns: RequestBuilder<TerritoryResponse> 
     */
    open class func appPricePointsTerritoryGetToOneRelatedWithRequestBuilder(_id: String, fieldsTerritories: [String]? = nil) -> RequestBuilder<TerritoryResponse> {
        var path = "/v1/appPricePoints/{id}/territory"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[territories]": fieldsTerritories
        ])


        let requestBuilder: RequestBuilder<TerritoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
