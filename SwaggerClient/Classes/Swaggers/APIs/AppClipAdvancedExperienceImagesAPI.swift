//
// AppClipAdvancedExperienceImagesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppClipAdvancedExperienceImagesAPI {
    /**

     - parameter body: (body) AppClipAdvancedExperienceImage representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appClipAdvancedExperienceImagesCreateInstance(body: AppClipAdvancedExperienceImageCreateRequest, completion: @escaping ((_ data: AppClipAdvancedExperienceImageResponse?,_ error: Error?) -> Void)) {
        appClipAdvancedExperienceImagesCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/appClipAdvancedExperienceImages
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "imageAsset" : {
        "width" : 6,
        "templateUrl" : "templateUrl",
        "height" : 1
      },
      "sourceFileChecksum" : "sourceFileChecksum",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appClipAdvancedExperienceImages"
  },
  "links" : {
    "self" : "self"
  }
}}]
     - parameter body: (body) AppClipAdvancedExperienceImage representation 

     - returns: RequestBuilder<AppClipAdvancedExperienceImageResponse> 
     */
    open class func appClipAdvancedExperienceImagesCreateInstanceWithRequestBuilder(body: AppClipAdvancedExperienceImageCreateRequest) -> RequestBuilder<AppClipAdvancedExperienceImageResponse> {
        let path = "/v1/appClipAdvancedExperienceImages"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppClipAdvancedExperienceImageResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter fieldsAppClipAdvancedExperienceImages
     */
    public enum FieldsAppClipAdvancedExperienceImages_appClipAdvancedExperienceImagesGetInstance: String { 
        case assetdeliverystate = "assetDeliveryState"
        case filename = "fileName"
        case filesize = "fileSize"
        case imageasset = "imageAsset"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppClipAdvancedExperienceImages: (query) the fields to include for returned resources of type appClipAdvancedExperienceImages (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appClipAdvancedExperienceImagesGetInstance(_id: String, fieldsAppClipAdvancedExperienceImages: [String]? = nil, completion: @escaping ((_ data: AppClipAdvancedExperienceImageResponse?,_ error: Error?) -> Void)) {
        appClipAdvancedExperienceImagesGetInstanceWithRequestBuilder(_id: _id, fieldsAppClipAdvancedExperienceImages: fieldsAppClipAdvancedExperienceImages).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appClipAdvancedExperienceImages/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "imageAsset" : {
        "width" : 6,
        "templateUrl" : "templateUrl",
        "height" : 1
      },
      "sourceFileChecksum" : "sourceFileChecksum",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appClipAdvancedExperienceImages"
  },
  "links" : {
    "self" : "self"
  }
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppClipAdvancedExperienceImages: (query) the fields to include for returned resources of type appClipAdvancedExperienceImages (optional)

     - returns: RequestBuilder<AppClipAdvancedExperienceImageResponse> 
     */
    open class func appClipAdvancedExperienceImagesGetInstanceWithRequestBuilder(_id: String, fieldsAppClipAdvancedExperienceImages: [String]? = nil) -> RequestBuilder<AppClipAdvancedExperienceImageResponse> {
        var path = "/v1/appClipAdvancedExperienceImages/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appClipAdvancedExperienceImages]": fieldsAppClipAdvancedExperienceImages
        ])


        let requestBuilder: RequestBuilder<AppClipAdvancedExperienceImageResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) AppClipAdvancedExperienceImage representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appClipAdvancedExperienceImagesUpdateInstance(body: AppClipAdvancedExperienceImageUpdateRequest, _id: String, completion: @escaping ((_ data: AppClipAdvancedExperienceImageResponse?,_ error: Error?) -> Void)) {
        appClipAdvancedExperienceImagesUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/appClipAdvancedExperienceImages/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "imageAsset" : {
        "width" : 6,
        "templateUrl" : "templateUrl",
        "height" : 1
      },
      "sourceFileChecksum" : "sourceFileChecksum",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appClipAdvancedExperienceImages"
  },
  "links" : {
    "self" : "self"
  }
}}]
     - parameter body: (body) AppClipAdvancedExperienceImage representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<AppClipAdvancedExperienceImageResponse> 
     */
    open class func appClipAdvancedExperienceImagesUpdateInstanceWithRequestBuilder(body: AppClipAdvancedExperienceImageUpdateRequest, _id: String) -> RequestBuilder<AppClipAdvancedExperienceImageResponse> {
        var path = "/v1/appClipAdvancedExperienceImages/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppClipAdvancedExperienceImageResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
