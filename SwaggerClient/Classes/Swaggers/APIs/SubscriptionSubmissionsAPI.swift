//
// SubscriptionSubmissionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SubscriptionSubmissionsAPI {
    /**

     - parameter body: (body) SubscriptionSubmission representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionSubmissionsCreateInstance(body: SubscriptionSubmissionCreateRequest, completion: @escaping ((_ data: SubscriptionSubmissionResponse?,_ error: Error?) -> Void)) {
        subscriptionSubmissionsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/subscriptionSubmissions
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionSubmissions"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionAppStoreReviewScreenshots"
        }
      },
      "promotionalOffers" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPromotionalOffers"
        }, {
          "id" : "id",
          "type" : "subscriptionPromotionalOffers"
        } ]
      },
      "introductoryOffers" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionIntroductoryOffers"
        }, {
          "id" : "id",
          "type" : "subscriptionIntroductoryOffers"
        } ]
      },
      "offerCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPrices"
        }, {
          "id" : "id",
          "type" : "subscriptionPrices"
        } ]
      },
      "subscriptionLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionLocalizations"
        }, {
          "id" : "id",
          "type" : "subscriptionLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "group" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGroups"
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "subscriptionPeriod" : "ONE_WEEK",
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "state" : "MISSING_METADATA",
      "groupLevel" : 0,
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "subscriptions"
  }, {
    "relationships" : {
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionAppStoreReviewScreenshots"
        }
      },
      "promotionalOffers" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPromotionalOffers"
        }, {
          "id" : "id",
          "type" : "subscriptionPromotionalOffers"
        } ]
      },
      "introductoryOffers" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionIntroductoryOffers"
        }, {
          "id" : "id",
          "type" : "subscriptionIntroductoryOffers"
        } ]
      },
      "offerCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPrices"
        }, {
          "id" : "id",
          "type" : "subscriptionPrices"
        } ]
      },
      "subscriptionLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionLocalizations"
        }, {
          "id" : "id",
          "type" : "subscriptionLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "group" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGroups"
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "subscriptionPeriod" : "ONE_WEEK",
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "state" : "MISSING_METADATA",
      "groupLevel" : 0,
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "subscriptions"
  } ]
}}]
     - parameter body: (body) SubscriptionSubmission representation 

     - returns: RequestBuilder<SubscriptionSubmissionResponse> 
     */
    open class func subscriptionSubmissionsCreateInstanceWithRequestBuilder(body: SubscriptionSubmissionCreateRequest) -> RequestBuilder<SubscriptionSubmissionResponse> {
        let path = "/v1/subscriptionSubmissions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubscriptionSubmissionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
