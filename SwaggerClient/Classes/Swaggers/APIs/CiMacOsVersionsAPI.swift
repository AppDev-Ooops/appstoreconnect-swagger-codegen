//
// CiMacOsVersionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class CiMacOsVersionsAPI {
    /**
     * enum for parameter fieldsCiMacOsVersions
     */
    public enum FieldsCiMacOsVersions_ciMacOsVersionsGetCollection: String { 
        case name = "name"
        case version = "version"
        case xcodeversions = "xcodeVersions"
    }

    /**
     * enum for parameter include
     */
    public enum Include_ciMacOsVersionsGetCollection: String { 
        case xcodeversions = "xcodeVersions"
    }

    /**
     * enum for parameter fieldsCiXcodeVersions
     */
    public enum FieldsCiXcodeVersions_ciMacOsVersionsGetCollection: String { 
        case macosversions = "macOsVersions"
        case name = "name"
        case testdestinations = "testDestinations"
        case version = "version"
    }

    /**

     - parameter fieldsCiMacOsVersions: (query) the fields to include for returned resources of type ciMacOsVersions (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsCiXcodeVersions: (query) the fields to include for returned resources of type ciXcodeVersions (optional)
     - parameter limitXcodeVersions: (query) maximum number of related xcodeVersions returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func ciMacOsVersionsGetCollection(fieldsCiMacOsVersions: [String]? = nil, limit: Int? = nil, include: [String]? = nil, fieldsCiXcodeVersions: [String]? = nil, limitXcodeVersions: Int? = nil, completion: @escaping ((_ data: CiMacOsVersionsResponse?,_ error: Error?) -> Void)) {
        ciMacOsVersionsGetCollectionWithRequestBuilder(fieldsCiMacOsVersions: fieldsCiMacOsVersions, limit: limit, include: include, fieldsCiXcodeVersions: fieldsCiXcodeVersions, limitXcodeVersions: limitXcodeVersions).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/ciMacOsVersions
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "xcodeVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciXcodeVersions"
        }, {
          "id" : "id",
          "type" : "ciXcodeVersions"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "version" : "version"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ciMacOsVersions"
  }, {
    "relationships" : {
      "xcodeVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciXcodeVersions"
        }, {
          "id" : "id",
          "type" : "ciXcodeVersions"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "version" : "version"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ciMacOsVersions"
  } ],
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "macOsVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciMacOsVersions"
        }, {
          "id" : "id",
          "type" : "ciMacOsVersions"
        } ]
      }
    },
    "attributes" : {
      "testDestinations" : [ {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      }, {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      } ],
      "name" : "name",
      "version" : "version"
    },
    "id" : "id",
    "type" : "ciXcodeVersions"
  }, {
    "relationships" : {
      "macOsVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciMacOsVersions"
        }, {
          "id" : "id",
          "type" : "ciMacOsVersions"
        } ]
      }
    },
    "attributes" : {
      "testDestinations" : [ {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      }, {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      } ],
      "name" : "name",
      "version" : "version"
    },
    "id" : "id",
    "type" : "ciXcodeVersions"
  } ]
}}]
     - parameter fieldsCiMacOsVersions: (query) the fields to include for returned resources of type ciMacOsVersions (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsCiXcodeVersions: (query) the fields to include for returned resources of type ciXcodeVersions (optional)
     - parameter limitXcodeVersions: (query) maximum number of related xcodeVersions returned (when they are included) (optional)

     - returns: RequestBuilder<CiMacOsVersionsResponse> 
     */
    open class func ciMacOsVersionsGetCollectionWithRequestBuilder(fieldsCiMacOsVersions: [String]? = nil, limit: Int? = nil, include: [String]? = nil, fieldsCiXcodeVersions: [String]? = nil, limitXcodeVersions: Int? = nil) -> RequestBuilder<CiMacOsVersionsResponse> {
        let path = "/v1/ciMacOsVersions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[ciMacOsVersions]": fieldsCiMacOsVersions, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include, 
                        "fields[ciXcodeVersions]": fieldsCiXcodeVersions, 
                        "limit[xcodeVersions]": limitXcodeVersions?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<CiMacOsVersionsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsCiMacOsVersions
     */
    public enum FieldsCiMacOsVersions_ciMacOsVersionsGetInstance: String { 
        case name = "name"
        case version = "version"
        case xcodeversions = "xcodeVersions"
    }

    /**
     * enum for parameter include
     */
    public enum Include_ciMacOsVersionsGetInstance: String { 
        case xcodeversions = "xcodeVersions"
    }

    /**
     * enum for parameter fieldsCiXcodeVersions
     */
    public enum FieldsCiXcodeVersions_ciMacOsVersionsGetInstance: String { 
        case macosversions = "macOsVersions"
        case name = "name"
        case testdestinations = "testDestinations"
        case version = "version"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsCiMacOsVersions: (query) the fields to include for returned resources of type ciMacOsVersions (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsCiXcodeVersions: (query) the fields to include for returned resources of type ciXcodeVersions (optional)
     - parameter limitXcodeVersions: (query) maximum number of related xcodeVersions returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func ciMacOsVersionsGetInstance(_id: String, fieldsCiMacOsVersions: [String]? = nil, include: [String]? = nil, fieldsCiXcodeVersions: [String]? = nil, limitXcodeVersions: Int? = nil, completion: @escaping ((_ data: CiMacOsVersionResponse?,_ error: Error?) -> Void)) {
        ciMacOsVersionsGetInstanceWithRequestBuilder(_id: _id, fieldsCiMacOsVersions: fieldsCiMacOsVersions, include: include, fieldsCiXcodeVersions: fieldsCiXcodeVersions, limitXcodeVersions: limitXcodeVersions).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/ciMacOsVersions/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "xcodeVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciXcodeVersions"
        }, {
          "id" : "id",
          "type" : "ciXcodeVersions"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "version" : "version"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ciMacOsVersions"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "macOsVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciMacOsVersions"
        }, {
          "id" : "id",
          "type" : "ciMacOsVersions"
        } ]
      }
    },
    "attributes" : {
      "testDestinations" : [ {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      }, {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      } ],
      "name" : "name",
      "version" : "version"
    },
    "id" : "id",
    "type" : "ciXcodeVersions"
  }, {
    "relationships" : {
      "macOsVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciMacOsVersions"
        }, {
          "id" : "id",
          "type" : "ciMacOsVersions"
        } ]
      }
    },
    "attributes" : {
      "testDestinations" : [ {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      }, {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      } ],
      "name" : "name",
      "version" : "version"
    },
    "id" : "id",
    "type" : "ciXcodeVersions"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsCiMacOsVersions: (query) the fields to include for returned resources of type ciMacOsVersions (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsCiXcodeVersions: (query) the fields to include for returned resources of type ciXcodeVersions (optional)
     - parameter limitXcodeVersions: (query) maximum number of related xcodeVersions returned (when they are included) (optional)

     - returns: RequestBuilder<CiMacOsVersionResponse> 
     */
    open class func ciMacOsVersionsGetInstanceWithRequestBuilder(_id: String, fieldsCiMacOsVersions: [String]? = nil, include: [String]? = nil, fieldsCiXcodeVersions: [String]? = nil, limitXcodeVersions: Int? = nil) -> RequestBuilder<CiMacOsVersionResponse> {
        var path = "/v1/ciMacOsVersions/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[ciMacOsVersions]": fieldsCiMacOsVersions, 
                        "include": include, 
                        "fields[ciXcodeVersions]": fieldsCiXcodeVersions, 
                        "limit[xcodeVersions]": limitXcodeVersions?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<CiMacOsVersionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsCiXcodeVersions
     */
    public enum FieldsCiXcodeVersions_ciMacOsVersionsXcodeVersionsGetToManyRelated: String { 
        case macosversions = "macOsVersions"
        case name = "name"
        case testdestinations = "testDestinations"
        case version = "version"
    }

    /**
     * enum for parameter fieldsCiMacOsVersions
     */
    public enum FieldsCiMacOsVersions_ciMacOsVersionsXcodeVersionsGetToManyRelated: String { 
        case name = "name"
        case version = "version"
        case xcodeversions = "xcodeVersions"
    }

    /**
     * enum for parameter include
     */
    public enum Include_ciMacOsVersionsXcodeVersionsGetToManyRelated: String { 
        case macosversions = "macOsVersions"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsCiXcodeVersions: (query) the fields to include for returned resources of type ciXcodeVersions (optional)
     - parameter fieldsCiMacOsVersions: (query) the fields to include for returned resources of type ciMacOsVersions (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitMacOsVersions: (query) maximum number of related macOsVersions returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func ciMacOsVersionsXcodeVersionsGetToManyRelated(_id: String, fieldsCiXcodeVersions: [String]? = nil, fieldsCiMacOsVersions: [String]? = nil, limit: Int? = nil, limitMacOsVersions: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: CiXcodeVersionsResponse?,_ error: Error?) -> Void)) {
        ciMacOsVersionsXcodeVersionsGetToManyRelatedWithRequestBuilder(_id: _id, fieldsCiXcodeVersions: fieldsCiXcodeVersions, fieldsCiMacOsVersions: fieldsCiMacOsVersions, limit: limit, limitMacOsVersions: limitMacOsVersions, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/ciMacOsVersions/{id}/xcodeVersions
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "macOsVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciMacOsVersions"
        }, {
          "id" : "id",
          "type" : "ciMacOsVersions"
        } ]
      }
    },
    "attributes" : {
      "testDestinations" : [ {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      }, {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      } ],
      "name" : "name",
      "version" : "version"
    },
    "id" : "id",
    "type" : "ciXcodeVersions"
  }, {
    "relationships" : {
      "macOsVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciMacOsVersions"
        }, {
          "id" : "id",
          "type" : "ciMacOsVersions"
        } ]
      }
    },
    "attributes" : {
      "testDestinations" : [ {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      }, {
        "availableRuntimes" : [ {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        }, {
          "runtimeName" : "runtimeName",
          "runtimeIdentifier" : "runtimeIdentifier"
        } ],
        "kind" : "SIMULATOR",
        "deviceTypeName" : "deviceTypeName",
        "deviceTypeIdentifier" : "deviceTypeIdentifier"
      } ],
      "name" : "name",
      "version" : "version"
    },
    "id" : "id",
    "type" : "ciXcodeVersions"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "xcodeVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciXcodeVersions"
        }, {
          "id" : "id",
          "type" : "ciXcodeVersions"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "version" : "version"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ciMacOsVersions"
  }, {
    "relationships" : {
      "xcodeVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "ciXcodeVersions"
        }, {
          "id" : "id",
          "type" : "ciXcodeVersions"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "version" : "version"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ciMacOsVersions"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsCiXcodeVersions: (query) the fields to include for returned resources of type ciXcodeVersions (optional)
     - parameter fieldsCiMacOsVersions: (query) the fields to include for returned resources of type ciMacOsVersions (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter limitMacOsVersions: (query) maximum number of related macOsVersions returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<CiXcodeVersionsResponse> 
     */
    open class func ciMacOsVersionsXcodeVersionsGetToManyRelatedWithRequestBuilder(_id: String, fieldsCiXcodeVersions: [String]? = nil, fieldsCiMacOsVersions: [String]? = nil, limit: Int? = nil, limitMacOsVersions: Int? = nil, include: [String]? = nil) -> RequestBuilder<CiXcodeVersionsResponse> {
        var path = "/v1/ciMacOsVersions/{id}/xcodeVersions"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[ciXcodeVersions]": fieldsCiXcodeVersions, 
                        "fields[ciMacOsVersions]": fieldsCiMacOsVersions, 
                        "limit": limit?.encodeToJSON(), 
                        "limit[macOsVersions]": limitMacOsVersions?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<CiXcodeVersionsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
