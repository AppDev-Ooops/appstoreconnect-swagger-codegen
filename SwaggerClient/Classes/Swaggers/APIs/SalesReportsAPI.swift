//
// SalesReportsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SalesReportsAPI {
    /**
     * enum for parameter filterFrequency
     */
    public enum FilterFrequency_salesReportsGetCollection: String { 
        case daily = "DAILY"
        case weekly = "WEEKLY"
        case monthly = "MONTHLY"
        case yearly = "YEARLY"
    }

    /**
     * enum for parameter filterReportSubType
     */
    public enum FilterReportSubType_salesReportsGetCollection: String { 
        case summary = "SUMMARY"
        case detailed = "DETAILED"
    }

    /**
     * enum for parameter filterReportType
     */
    public enum FilterReportType_salesReportsGetCollection: String { 
        case sales = "SALES"
        case preOrder = "PRE_ORDER"
        case newsstand = "NEWSSTAND"
        case subscription = "SUBSCRIPTION"
        case subscriptionEvent = "SUBSCRIPTION_EVENT"
        case subscriber = "SUBSCRIBER"
        case subscriptionOfferCodeRedemption = "SUBSCRIPTION_OFFER_CODE_REDEMPTION"
    }

    /**

     - parameter filterFrequency: (query) filter by attribute &#x27;frequency&#x27; 
     - parameter filterReportSubType: (query) filter by attribute &#x27;reportSubType&#x27; 
     - parameter filterReportType: (query) filter by attribute &#x27;reportType&#x27; 
     - parameter filterVendorNumber: (query) filter by attribute &#x27;vendorNumber&#x27; 
     - parameter filterReportDate: (query) filter by attribute &#x27;reportDate&#x27; (optional)
     - parameter filterVersion: (query) filter by attribute &#x27;version&#x27; (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func salesReportsGetCollection(filterFrequency: [String], filterReportSubType: [String], filterReportType: [String], filterVendorNumber: [String], filterReportDate: [String]? = nil, filterVersion: [String]? = nil, completion: @escaping ((_ data: Gzip?,_ error: Error?) -> Void)) {
        salesReportsGetCollectionWithRequestBuilder(filterFrequency: filterFrequency, filterReportSubType: filterReportSubType, filterReportType: filterReportType, filterVendorNumber: filterVendorNumber, filterReportDate: filterReportDate, filterVersion: filterVersion).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/salesReports
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example=""}]
     - parameter filterFrequency: (query) filter by attribute &#x27;frequency&#x27; 
     - parameter filterReportSubType: (query) filter by attribute &#x27;reportSubType&#x27; 
     - parameter filterReportType: (query) filter by attribute &#x27;reportType&#x27; 
     - parameter filterVendorNumber: (query) filter by attribute &#x27;vendorNumber&#x27; 
     - parameter filterReportDate: (query) filter by attribute &#x27;reportDate&#x27; (optional)
     - parameter filterVersion: (query) filter by attribute &#x27;version&#x27; (optional)

     - returns: RequestBuilder<Gzip> 
     */
    open class func salesReportsGetCollectionWithRequestBuilder(filterFrequency: [String], filterReportSubType: [String], filterReportType: [String], filterVendorNumber: [String], filterReportDate: [String]? = nil, filterVersion: [String]? = nil) -> RequestBuilder<Gzip> {
        let path = "/v1/salesReports"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[frequency]": filterFrequency, 
                        "filter[reportDate]": filterReportDate, 
                        "filter[reportSubType]": filterReportSubType, 
                        "filter[reportType]": filterReportType, 
                        "filter[vendorNumber]": filterVendorNumber, 
                        "filter[version]": filterVersion
        ])


        let requestBuilder: RequestBuilder<Gzip>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
