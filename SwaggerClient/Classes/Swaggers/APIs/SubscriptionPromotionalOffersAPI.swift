//
// SubscriptionPromotionalOffersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SubscriptionPromotionalOffersAPI {
    /**

     - parameter body: (body) SubscriptionPromotionalOffer representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionPromotionalOffersCreateInstance(body: SubscriptionPromotionalOfferCreateRequest, completion: @escaping ((_ data: SubscriptionPromotionalOfferResponse?,_ error: Error?) -> Void)) {
        subscriptionPromotionalOffersCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/subscriptionPromotionalOffers
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPromotionalOfferPrices"
        }, {
          "id" : "id",
          "type" : "subscriptionPromotionalOfferPrices"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerCode" : "offerCode",
      "name" : "name",
      "numberOfPeriods" : 0,
      "offerMode" : "PAY_AS_YOU_GO"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionPromotionalOffers"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) SubscriptionPromotionalOffer representation 

     - returns: RequestBuilder<SubscriptionPromotionalOfferResponse> 
     */
    open class func subscriptionPromotionalOffersCreateInstanceWithRequestBuilder(body: SubscriptionPromotionalOfferCreateRequest) -> RequestBuilder<SubscriptionPromotionalOfferResponse> {
        let path = "/v1/subscriptionPromotionalOffers"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubscriptionPromotionalOfferResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionPromotionalOffersDeleteInstance(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        subscriptionPromotionalOffersDeleteInstanceWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v1/subscriptionPromotionalOffers/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func subscriptionPromotionalOffersDeleteInstanceWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/v1/subscriptionPromotionalOffers/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsSubscriptionPromotionalOffers
     */
    public enum FieldsSubscriptionPromotionalOffers_subscriptionPromotionalOffersGetInstance: String { 
        case duration = "duration"
        case name = "name"
        case numberofperiods = "numberOfPeriods"
        case offercode = "offerCode"
        case offermode = "offerMode"
        case prices = "prices"
        case subscription = "subscription"
    }

    /**
     * enum for parameter include
     */
    public enum Include_subscriptionPromotionalOffersGetInstance: String { 
        case prices = "prices"
        case subscription = "subscription"
    }

    /**
     * enum for parameter fieldsSubscriptionPromotionalOfferPrices
     */
    public enum FieldsSubscriptionPromotionalOfferPrices_subscriptionPromotionalOffersGetInstance: String { 
        case subscriptionpricepoint = "subscriptionPricePoint"
        case territory = "territory"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionPromotionalOffers: (query) the fields to include for returned resources of type subscriptionPromotionalOffers (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsSubscriptionPromotionalOfferPrices: (query) the fields to include for returned resources of type subscriptionPromotionalOfferPrices (optional)
     - parameter limitPrices: (query) maximum number of related prices returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionPromotionalOffersGetInstance(_id: String, fieldsSubscriptionPromotionalOffers: [String]? = nil, include: [String]? = nil, fieldsSubscriptionPromotionalOfferPrices: [String]? = nil, limitPrices: Int? = nil, completion: @escaping ((_ data: SubscriptionPromotionalOfferResponse?,_ error: Error?) -> Void)) {
        subscriptionPromotionalOffersGetInstanceWithRequestBuilder(_id: _id, fieldsSubscriptionPromotionalOffers: fieldsSubscriptionPromotionalOffers, include: include, fieldsSubscriptionPromotionalOfferPrices: fieldsSubscriptionPromotionalOfferPrices, limitPrices: limitPrices).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/subscriptionPromotionalOffers/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPromotionalOfferPrices"
        }, {
          "id" : "id",
          "type" : "subscriptionPromotionalOfferPrices"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerCode" : "offerCode",
      "name" : "name",
      "numberOfPeriods" : 0,
      "offerMode" : "PAY_AS_YOU_GO"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionPromotionalOffers"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionPromotionalOffers: (query) the fields to include for returned resources of type subscriptionPromotionalOffers (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsSubscriptionPromotionalOfferPrices: (query) the fields to include for returned resources of type subscriptionPromotionalOfferPrices (optional)
     - parameter limitPrices: (query) maximum number of related prices returned (when they are included) (optional)

     - returns: RequestBuilder<SubscriptionPromotionalOfferResponse> 
     */
    open class func subscriptionPromotionalOffersGetInstanceWithRequestBuilder(_id: String, fieldsSubscriptionPromotionalOffers: [String]? = nil, include: [String]? = nil, fieldsSubscriptionPromotionalOfferPrices: [String]? = nil, limitPrices: Int? = nil) -> RequestBuilder<SubscriptionPromotionalOfferResponse> {
        var path = "/v1/subscriptionPromotionalOffers/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[subscriptionPromotionalOffers]": fieldsSubscriptionPromotionalOffers, 
                        "include": include, 
                        "fields[subscriptionPromotionalOfferPrices]": fieldsSubscriptionPromotionalOfferPrices, 
                        "limit[prices]": limitPrices?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<SubscriptionPromotionalOfferResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsSubscriptionPricePoints
     */
    public enum FieldsSubscriptionPricePoints_subscriptionPromotionalOffersPricesGetToManyRelated: String { 
        case customerprice = "customerPrice"
        case equalizations = "equalizations"
        case proceeds = "proceeds"
        case proceedsyear2 = "proceedsYear2"
        case subscription = "subscription"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_subscriptionPromotionalOffersPricesGetToManyRelated: String { 
        case currency = "currency"
    }

    /**
     * enum for parameter fieldsSubscriptionPromotionalOfferPrices
     */
    public enum FieldsSubscriptionPromotionalOfferPrices_subscriptionPromotionalOffersPricesGetToManyRelated: String { 
        case subscriptionpricepoint = "subscriptionPricePoint"
        case territory = "territory"
    }

    /**
     * enum for parameter include
     */
    public enum Include_subscriptionPromotionalOffersPricesGetToManyRelated: String { 
        case subscriptionpricepoint = "subscriptionPricePoint"
        case territory = "territory"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsSubscriptionPricePoints: (query) the fields to include for returned resources of type subscriptionPricePoints (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter fieldsSubscriptionPromotionalOfferPrices: (query) the fields to include for returned resources of type subscriptionPromotionalOfferPrices (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionPromotionalOffersPricesGetToManyRelated(_id: String, filterTerritory: [String]? = nil, fieldsSubscriptionPricePoints: [String]? = nil, fieldsTerritories: [String]? = nil, fieldsSubscriptionPromotionalOfferPrices: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: SubscriptionPromotionalOfferPricesResponse?,_ error: Error?) -> Void)) {
        subscriptionPromotionalOffersPricesGetToManyRelatedWithRequestBuilder(_id: _id, filterTerritory: filterTerritory, fieldsSubscriptionPricePoints: fieldsSubscriptionPricePoints, fieldsTerritories: fieldsTerritories, fieldsSubscriptionPromotionalOfferPrices: fieldsSubscriptionPromotionalOfferPrices, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/subscriptionPromotionalOffers/{id}/prices
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "subscriptionPricePoint" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionPricePoints"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionPromotionalOfferPrices"
  }, {
    "relationships" : {
      "subscriptionPricePoint" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionPricePoints"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionPromotionalOfferPrices"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsSubscriptionPricePoints: (query) the fields to include for returned resources of type subscriptionPricePoints (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter fieldsSubscriptionPromotionalOfferPrices: (query) the fields to include for returned resources of type subscriptionPromotionalOfferPrices (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<SubscriptionPromotionalOfferPricesResponse> 
     */
    open class func subscriptionPromotionalOffersPricesGetToManyRelatedWithRequestBuilder(_id: String, filterTerritory: [String]? = nil, fieldsSubscriptionPricePoints: [String]? = nil, fieldsTerritories: [String]? = nil, fieldsSubscriptionPromotionalOfferPrices: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<SubscriptionPromotionalOfferPricesResponse> {
        var path = "/v1/subscriptionPromotionalOffers/{id}/prices"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[territory]": filterTerritory, 
                        "fields[subscriptionPricePoints]": fieldsSubscriptionPricePoints, 
                        "fields[territories]": fieldsTerritories, 
                        "fields[subscriptionPromotionalOfferPrices]": fieldsSubscriptionPromotionalOfferPrices, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<SubscriptionPromotionalOfferPricesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) SubscriptionPromotionalOffer representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionPromotionalOffersUpdateInstance(body: SubscriptionPromotionalOfferUpdateRequest, _id: String, completion: @escaping ((_ data: SubscriptionPromotionalOfferResponse?,_ error: Error?) -> Void)) {
        subscriptionPromotionalOffersUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/subscriptionPromotionalOffers/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionPromotionalOfferPrices"
        }, {
          "id" : "id",
          "type" : "subscriptionPromotionalOfferPrices"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerCode" : "offerCode",
      "name" : "name",
      "numberOfPeriods" : 0,
      "offerMode" : "PAY_AS_YOU_GO"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionPromotionalOffers"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) SubscriptionPromotionalOffer representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<SubscriptionPromotionalOfferResponse> 
     */
    open class func subscriptionPromotionalOffersUpdateInstanceWithRequestBuilder(body: SubscriptionPromotionalOfferUpdateRequest, _id: String) -> RequestBuilder<SubscriptionPromotionalOfferResponse> {
        var path = "/v1/subscriptionPromotionalOffers/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubscriptionPromotionalOfferResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
