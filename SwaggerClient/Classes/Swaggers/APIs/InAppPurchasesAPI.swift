//
// InAppPurchasesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class InAppPurchasesAPI {
    /**
     * enum for parameter fieldsInAppPurchaseAppStoreReviewScreenshots
     */
    public enum FieldsInAppPurchaseAppStoreReviewScreenshots_inAppPurchasesAppStoreReviewScreenshotGetToOneRelated: String { 
        case assetdeliverystate = "assetDeliveryState"
        case assettoken = "assetToken"
        case assettype = "assetType"
        case filename = "fileName"
        case filesize = "fileSize"
        case imageasset = "imageAsset"
        case inapppurchasev2 = "inAppPurchaseV2"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesAppStoreReviewScreenshotGetToOneRelated: String { 
        case app = "app"
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case content = "content"
        case contenthosting = "contentHosting"
        case familysharable = "familySharable"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case inapppurchasetype = "inAppPurchaseType"
        case name = "name"
        case pricepoints = "pricePoints"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case reviewnote = "reviewNote"
        case state = "state"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesAppStoreReviewScreenshotGetToOneRelated: String { 
        case inapppurchasev2 = "inAppPurchaseV2"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseAppStoreReviewScreenshots: (query) the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesAppStoreReviewScreenshotGetToOneRelated(_id: String, fieldsInAppPurchaseAppStoreReviewScreenshots: [String]? = nil, fieldsInAppPurchases: [String]? = nil, include: [String]? = nil, completion: @escaping ((_ data: InAppPurchaseAppStoreReviewScreenshotResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesAppStoreReviewScreenshotGetToOneRelatedWithRequestBuilder(_id: _id, fieldsInAppPurchaseAppStoreReviewScreenshots: fieldsInAppPurchaseAppStoreReviewScreenshots, fieldsInAppPurchases: fieldsInAppPurchases, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}/appStoreReviewScreenshot
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "assetDeliveryState" : {
        "warnings" : [ null, null ],
        "state" : "AWAITING_UPLOAD",
        "errors" : [ {
          "code" : "code",
          "description" : "description"
        }, {
          "code" : "code",
          "description" : "description"
        } ]
      },
      "imageAsset" : {
        "width" : 6,
        "templateUrl" : "templateUrl",
        "height" : 1
      },
      "sourceFileChecksum" : "sourceFileChecksum",
      "assetToken" : "assetToken",
      "uploadOperations" : [ {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      }, {
        "requestHeaders" : [ {
          "name" : "name",
          "value" : "value"
        }, {
          "name" : "name",
          "value" : "value"
        } ],
        "method" : "method",
        "offset" : 5,
        "length" : 5,
        "url" : "url"
      } ],
      "assetType" : "assetType"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseAppStoreReviewScreenshots"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  }, {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseAppStoreReviewScreenshots: (query) the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<InAppPurchaseAppStoreReviewScreenshotResponse> 
     */
    open class func inAppPurchasesAppStoreReviewScreenshotGetToOneRelatedWithRequestBuilder(_id: String, fieldsInAppPurchaseAppStoreReviewScreenshots: [String]? = nil, fieldsInAppPurchases: [String]? = nil, include: [String]? = nil) -> RequestBuilder<InAppPurchaseAppStoreReviewScreenshotResponse> {
        var path = "/v2/inAppPurchases/{id}/appStoreReviewScreenshot"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchaseAppStoreReviewScreenshots]": fieldsInAppPurchaseAppStoreReviewScreenshots, 
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<InAppPurchaseAppStoreReviewScreenshotResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesContentGetToOneRelated: String { 
        case app = "app"
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case content = "content"
        case contenthosting = "contentHosting"
        case familysharable = "familySharable"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case inapppurchasetype = "inAppPurchaseType"
        case name = "name"
        case pricepoints = "pricePoints"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case reviewnote = "reviewNote"
        case state = "state"
    }

    /**
     * enum for parameter fieldsInAppPurchaseContents
     */
    public enum FieldsInAppPurchaseContents_inAppPurchasesContentGetToOneRelated: String { 
        case filename = "fileName"
        case filesize = "fileSize"
        case inapppurchasev2 = "inAppPurchaseV2"
        case lastmodifieddate = "lastModifiedDate"
        case url = "url"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesContentGetToOneRelated: String { 
        case inapppurchasev2 = "inAppPurchaseV2"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter fieldsInAppPurchaseContents: (query) the fields to include for returned resources of type inAppPurchaseContents (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesContentGetToOneRelated(_id: String, fieldsInAppPurchases: [String]? = nil, fieldsInAppPurchaseContents: [String]? = nil, include: [String]? = nil, completion: @escaping ((_ data: InAppPurchaseContentResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesContentGetToOneRelatedWithRequestBuilder(_id: _id, fieldsInAppPurchases: fieldsInAppPurchases, fieldsInAppPurchaseContents: fieldsInAppPurchaseContents, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}/content
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "fileName" : "fileName",
      "fileSize" : 0,
      "lastModifiedDate" : "2000-01-23T04:56:07.000+00:00",
      "url" : "http://example.com/aeiou"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseContents"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  }, {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter fieldsInAppPurchaseContents: (query) the fields to include for returned resources of type inAppPurchaseContents (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<InAppPurchaseContentResponse> 
     */
    open class func inAppPurchasesContentGetToOneRelatedWithRequestBuilder(_id: String, fieldsInAppPurchases: [String]? = nil, fieldsInAppPurchaseContents: [String]? = nil, include: [String]? = nil) -> RequestBuilder<InAppPurchaseContentResponse> {
        var path = "/v2/inAppPurchases/{id}/content"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "fields[inAppPurchaseContents]": fieldsInAppPurchaseContents, 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<InAppPurchaseContentResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) InAppPurchase representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesCreateInstance(body: InAppPurchaseV2CreateRequest, completion: @escaping ((_ data: InAppPurchaseV2Response?,_ error: Error?) -> Void)) {
        inAppPurchasesCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v2/inAppPurchases
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) InAppPurchase representation 

     - returns: RequestBuilder<InAppPurchaseV2Response> 
     */
    open class func inAppPurchasesCreateInstanceWithRequestBuilder(body: InAppPurchaseV2CreateRequest) -> RequestBuilder<InAppPurchaseV2Response> {
        let path = "/v2/inAppPurchases"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InAppPurchaseV2Response>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesDeleteInstance(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        inAppPurchasesDeleteInstanceWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v2/inAppPurchases/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func inAppPurchasesDeleteInstanceWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/v2/inAppPurchases/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesGetInstance: String { 
        case apps = "apps"
        case inapppurchasetype = "inAppPurchaseType"
        case productid = "productId"
        case referencename = "referenceName"
        case state = "state"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesGetInstance: String { 
        case apps = "apps"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitApps: (query) maximum number of related apps returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesGetInstance(_id: String, fieldsInAppPurchases: [String]? = nil, include: [String]? = nil, limitApps: Int? = nil, completion: @escaping ((_ data: InAppPurchaseResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesGetInstanceWithRequestBuilder(_id: _id, fieldsInAppPurchases: fieldsInAppPurchases, include: include, limitApps: limitApps).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/inAppPurchases/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "apps" : {
        "data" : [ {
          "id" : "id",
          "type" : "apps"
        }, {
          "id" : "id",
          "type" : "apps"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "productId" : "productId",
      "state" : "CREATED",
      "inAppPurchaseType" : "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION",
      "referenceName" : "referenceName"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchases"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  }, {
    "relationships" : {
      "betaGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaGroups"
        }, {
          "id" : "id",
          "type" : "betaGroups"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "appEvents" : {
        "data" : [ {
          "id" : "id",
          "type" : "appEvents"
        }, {
          "id" : "id",
          "type" : "appEvents"
        } ]
      },
      "reviewSubmissions" : {
        "data" : [ {
          "id" : "id",
          "type" : "reviewSubmissions"
        }, {
          "id" : "id",
          "type" : "reviewSubmissions"
        } ]
      },
      "endUserLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "endUserLicenseAgreements"
        }
      },
      "appInfos" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfos"
        }, {
          "id" : "id",
          "type" : "appInfos"
        } ]
      },
      "preReleaseVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "preReleaseVersions"
        }, {
          "id" : "id",
          "type" : "preReleaseVersions"
        } ]
      },
      "appCustomProductPages" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCustomProductPages"
        }, {
          "id" : "id",
          "type" : "appCustomProductPages"
        } ]
      },
      "inAppPurchasesV2" : {
        "data" : [ null, null ]
      },
      "inAppPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchases"
        }, {
          "id" : "id",
          "type" : "inAppPurchases"
        } ]
      },
      "appClips" : {
        "data" : [ {
          "id" : "id",
          "type" : "appClips"
        }, {
          "id" : "id",
          "type" : "appClips"
        } ]
      },
      "ciProduct" : {
        "data" : {
          "id" : "id",
          "type" : "ciProducts"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "betaLicenseAgreement" : {
        "data" : {
          "id" : "id",
          "type" : "betaLicenseAgreements"
        }
      },
      "betaAppReviewDetail" : {
        "data" : {
          "id" : "id",
          "type" : "betaAppReviewDetails"
        }
      },
      "promotedPurchases" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchases"
        }, {
          "id" : "id",
          "type" : "promotedPurchases"
        } ]
      },
      "subscriptionGracePeriod" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionGracePeriods"
        }
      },
      "subscriptionGroups" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionGroups"
        }, {
          "id" : "id",
          "type" : "subscriptionGroups"
        } ]
      },
      "gameCenterEnabledVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        }, {
          "id" : "id",
          "type" : "gameCenterEnabledVersions"
        } ]
      },
      "appStoreVersions" : {
        "data" : [ {
          "id" : "id",
          "type" : "appStoreVersions"
        }, {
          "id" : "id",
          "type" : "appStoreVersions"
        } ]
      },
      "builds" : {
        "data" : [ {
          "id" : "id",
          "type" : "builds"
        }, {
          "id" : "id",
          "type" : "builds"
        } ]
      },
      "preOrder" : {
        "data" : {
          "id" : "id",
          "type" : "appPreOrders"
        }
      },
      "betaAppLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "betaAppLocalizations"
        }, {
          "id" : "id",
          "type" : "betaAppLocalizations"
        } ]
      },
      "availableTerritories" : {
        "data" : [ {
          "id" : "id",
          "type" : "territories"
        }, {
          "id" : "id",
          "type" : "territories"
        } ]
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "appPrices"
        }, {
          "id" : "id",
          "type" : "appPrices"
        } ]
      }
    },
    "attributes" : {
      "name" : "name",
      "bundleId" : "bundleId",
      "isOrEverWasMadeForKids" : true,
      "subscriptionStatusUrlForSandbox" : "http://example.com/aeiou",
      "sku" : "sku",
      "subscriptionStatusUrl" : "http://example.com/aeiou",
      "primaryLocale" : "primaryLocale",
      "availableInNewTerritories" : true,
      "contentRightsDeclaration" : "DOES_NOT_USE_THIRD_PARTY_CONTENT",
      "subscriptionStatusUrlVersion" : "V1"
    },
    "id" : "id",
    "type" : "apps"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitApps: (query) maximum number of related apps returned (when they are included) (optional)

     - returns: RequestBuilder<InAppPurchaseResponse> 
     */
    open class func inAppPurchasesGetInstanceWithRequestBuilder(_id: String, fieldsInAppPurchases: [String]? = nil, include: [String]? = nil, limitApps: Int? = nil) -> RequestBuilder<InAppPurchaseResponse> {
        var path = "/v1/inAppPurchases/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "include": include, 
                        "limit[apps]": limitApps?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<InAppPurchaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesGetInstance_0: String { 
        case app = "app"
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case content = "content"
        case contenthosting = "contentHosting"
        case familysharable = "familySharable"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case inapppurchasetype = "inAppPurchaseType"
        case name = "name"
        case pricepoints = "pricePoints"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case reviewnote = "reviewNote"
        case state = "state"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesGetInstance_0: String { 
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case content = "content"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case pricepoints = "pricePoints"
        case promotedpurchase = "promotedPurchase"
    }

    /**
     * enum for parameter fieldsInAppPurchaseAppStoreReviewScreenshots
     */
    public enum FieldsInAppPurchaseAppStoreReviewScreenshots_inAppPurchasesGetInstance_0: String { 
        case assetdeliverystate = "assetDeliveryState"
        case assettoken = "assetToken"
        case assettype = "assetType"
        case filename = "fileName"
        case filesize = "fileSize"
        case imageasset = "imageAsset"
        case inapppurchasev2 = "inAppPurchaseV2"
        case sourcefilechecksum = "sourceFileChecksum"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**
     * enum for parameter fieldsPromotedPurchases
     */
    public enum FieldsPromotedPurchases_inAppPurchasesGetInstance_0: String { 
        case app = "app"
        case enabled = "enabled"
        case inapppurchasev2 = "inAppPurchaseV2"
        case promotionimages = "promotionImages"
        case state = "state"
        case subscription = "subscription"
        case visibleforallusers = "visibleForAllUsers"
    }

    /**
     * enum for parameter fieldsInAppPurchasePricePoints
     */
    public enum FieldsInAppPurchasePricePoints_inAppPurchasesGetInstance_0: String { 
        case customerprice = "customerPrice"
        case inapppurchasev2 = "inAppPurchaseV2"
        case pricetier = "priceTier"
        case proceeds = "proceeds"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsInAppPurchaseLocalizations
     */
    public enum FieldsInAppPurchaseLocalizations_inAppPurchasesGetInstance_0: String { 
        case _description = "description"
        case inapppurchasev2 = "inAppPurchaseV2"
        case locale = "locale"
        case name = "name"
        case state = "state"
    }

    /**
     * enum for parameter fieldsInAppPurchasePriceSchedules
     */
    public enum FieldsInAppPurchasePriceSchedules_inAppPurchasesGetInstance_0: String { 
        case inapppurchase = "inAppPurchase"
        case manualprices = "manualPrices"
    }

    /**
     * enum for parameter fieldsInAppPurchaseContents
     */
    public enum FieldsInAppPurchaseContents_inAppPurchasesGetInstance_0: String { 
        case filename = "fileName"
        case filesize = "fileSize"
        case inapppurchasev2 = "inAppPurchaseV2"
        case lastmodifieddate = "lastModifiedDate"
        case url = "url"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsInAppPurchaseAppStoreReviewScreenshots: (query) the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots (optional)
     - parameter fieldsPromotedPurchases: (query) the fields to include for returned resources of type promotedPurchases (optional)
     - parameter fieldsInAppPurchasePricePoints: (query) the fields to include for returned resources of type inAppPurchasePricePoints (optional)
     - parameter fieldsInAppPurchaseLocalizations: (query) the fields to include for returned resources of type inAppPurchaseLocalizations (optional)
     - parameter fieldsInAppPurchasePriceSchedules: (query) the fields to include for returned resources of type inAppPurchasePriceSchedules (optional)
     - parameter fieldsInAppPurchaseContents: (query) the fields to include for returned resources of type inAppPurchaseContents (optional)
     - parameter limitInAppPurchaseLocalizations: (query) maximum number of related inAppPurchaseLocalizations returned (when they are included) (optional)
     - parameter limitPricePoints: (query) maximum number of related pricePoints returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesGetInstance_0(_id: String, fieldsInAppPurchases: [String]? = nil, include: [String]? = nil, fieldsInAppPurchaseAppStoreReviewScreenshots: [String]? = nil, fieldsPromotedPurchases: [String]? = nil, fieldsInAppPurchasePricePoints: [String]? = nil, fieldsInAppPurchaseLocalizations: [String]? = nil, fieldsInAppPurchasePriceSchedules: [String]? = nil, fieldsInAppPurchaseContents: [String]? = nil, limitInAppPurchaseLocalizations: Int? = nil, limitPricePoints: Int? = nil, completion: @escaping ((_ data: InAppPurchaseV2Response?,_ error: Error?) -> Void)) {
        inAppPurchasesGetInstance_0WithRequestBuilder(_id: _id, fieldsInAppPurchases: fieldsInAppPurchases, include: include, fieldsInAppPurchaseAppStoreReviewScreenshots: fieldsInAppPurchaseAppStoreReviewScreenshots, fieldsPromotedPurchases: fieldsPromotedPurchases, fieldsInAppPurchasePricePoints: fieldsInAppPurchasePricePoints, fieldsInAppPurchaseLocalizations: fieldsInAppPurchaseLocalizations, fieldsInAppPurchasePriceSchedules: fieldsInAppPurchasePriceSchedules, fieldsInAppPurchaseContents: fieldsInAppPurchaseContents, limitInAppPurchaseLocalizations: limitInAppPurchaseLocalizations, limitPricePoints: limitPricePoints).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsInAppPurchaseAppStoreReviewScreenshots: (query) the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots (optional)
     - parameter fieldsPromotedPurchases: (query) the fields to include for returned resources of type promotedPurchases (optional)
     - parameter fieldsInAppPurchasePricePoints: (query) the fields to include for returned resources of type inAppPurchasePricePoints (optional)
     - parameter fieldsInAppPurchaseLocalizations: (query) the fields to include for returned resources of type inAppPurchaseLocalizations (optional)
     - parameter fieldsInAppPurchasePriceSchedules: (query) the fields to include for returned resources of type inAppPurchasePriceSchedules (optional)
     - parameter fieldsInAppPurchaseContents: (query) the fields to include for returned resources of type inAppPurchaseContents (optional)
     - parameter limitInAppPurchaseLocalizations: (query) maximum number of related inAppPurchaseLocalizations returned (when they are included) (optional)
     - parameter limitPricePoints: (query) maximum number of related pricePoints returned (when they are included) (optional)

     - returns: RequestBuilder<InAppPurchaseV2Response> 
     */
    open class func inAppPurchasesGetInstance_0WithRequestBuilder(_id: String, fieldsInAppPurchases: [String]? = nil, include: [String]? = nil, fieldsInAppPurchaseAppStoreReviewScreenshots: [String]? = nil, fieldsPromotedPurchases: [String]? = nil, fieldsInAppPurchasePricePoints: [String]? = nil, fieldsInAppPurchaseLocalizations: [String]? = nil, fieldsInAppPurchasePriceSchedules: [String]? = nil, fieldsInAppPurchaseContents: [String]? = nil, limitInAppPurchaseLocalizations: Int? = nil, limitPricePoints: Int? = nil) -> RequestBuilder<InAppPurchaseV2Response> {
        var path = "/v2/inAppPurchases/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "include": include, 
                        "fields[inAppPurchaseAppStoreReviewScreenshots]": fieldsInAppPurchaseAppStoreReviewScreenshots, 
                        "fields[promotedPurchases]": fieldsPromotedPurchases, 
                        "fields[inAppPurchasePricePoints]": fieldsInAppPurchasePricePoints, 
                        "fields[inAppPurchaseLocalizations]": fieldsInAppPurchaseLocalizations, 
                        "fields[inAppPurchasePriceSchedules]": fieldsInAppPurchasePriceSchedules, 
                        "fields[inAppPurchaseContents]": fieldsInAppPurchaseContents, 
                        "limit[inAppPurchaseLocalizations]": limitInAppPurchaseLocalizations?.encodeToJSON(), 
                        "limit[pricePoints]": limitPricePoints?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<InAppPurchaseV2Response>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchasePrices
     */
    public enum FieldsInAppPurchasePrices_inAppPurchasesIapPriceScheduleGetToOneRelated: String { 
        case inapppurchasepricepoint = "inAppPurchasePricePoint"
        case inapppurchasev2 = "inAppPurchaseV2"
        case startdate = "startDate"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesIapPriceScheduleGetToOneRelated: String { 
        case app = "app"
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case content = "content"
        case contenthosting = "contentHosting"
        case familysharable = "familySharable"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case inapppurchasetype = "inAppPurchaseType"
        case name = "name"
        case pricepoints = "pricePoints"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case reviewnote = "reviewNote"
        case state = "state"
    }

    /**
     * enum for parameter fieldsInAppPurchasePriceSchedules
     */
    public enum FieldsInAppPurchasePriceSchedules_inAppPurchasesIapPriceScheduleGetToOneRelated: String { 
        case inapppurchase = "inAppPurchase"
        case manualprices = "manualPrices"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesIapPriceScheduleGetToOneRelated: String { 
        case inapppurchase = "inAppPurchase"
        case manualprices = "manualPrices"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchasePrices: (query) the fields to include for returned resources of type inAppPurchasePrices (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter fieldsInAppPurchasePriceSchedules: (query) the fields to include for returned resources of type inAppPurchasePriceSchedules (optional)
     - parameter limitManualPrices: (query) maximum number of related manualPrices returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesIapPriceScheduleGetToOneRelated(_id: String, fieldsInAppPurchasePrices: [String]? = nil, fieldsInAppPurchases: [String]? = nil, fieldsInAppPurchasePriceSchedules: [String]? = nil, limitManualPrices: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: InAppPurchasePriceScheduleResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesIapPriceScheduleGetToOneRelatedWithRequestBuilder(_id: _id, fieldsInAppPurchasePrices: fieldsInAppPurchasePrices, fieldsInAppPurchases: fieldsInAppPurchases, fieldsInAppPurchasePriceSchedules: fieldsInAppPurchasePriceSchedules, limitManualPrices: limitManualPrices, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}/iapPriceSchedule
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "inAppPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "manualPrices" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePrices"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePrices"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchasePriceSchedules"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchasePrices: (query) the fields to include for returned resources of type inAppPurchasePrices (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter fieldsInAppPurchasePriceSchedules: (query) the fields to include for returned resources of type inAppPurchasePriceSchedules (optional)
     - parameter limitManualPrices: (query) maximum number of related manualPrices returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<InAppPurchasePriceScheduleResponse> 
     */
    open class func inAppPurchasesIapPriceScheduleGetToOneRelatedWithRequestBuilder(_id: String, fieldsInAppPurchasePrices: [String]? = nil, fieldsInAppPurchases: [String]? = nil, fieldsInAppPurchasePriceSchedules: [String]? = nil, limitManualPrices: Int? = nil, include: [String]? = nil) -> RequestBuilder<InAppPurchasePriceScheduleResponse> {
        var path = "/v2/inAppPurchases/{id}/iapPriceSchedule"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchasePrices]": fieldsInAppPurchasePrices, 
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "fields[inAppPurchasePriceSchedules]": fieldsInAppPurchasePriceSchedules, 
                        "limit[manualPrices]": limitManualPrices?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<InAppPurchasePriceScheduleResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchaseLocalizations
     */
    public enum FieldsInAppPurchaseLocalizations_inAppPurchasesInAppPurchaseLocalizationsGetToManyRelated: String { 
        case _description = "description"
        case inapppurchasev2 = "inAppPurchaseV2"
        case locale = "locale"
        case name = "name"
        case state = "state"
    }

    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesInAppPurchaseLocalizationsGetToManyRelated: String { 
        case app = "app"
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case content = "content"
        case contenthosting = "contentHosting"
        case familysharable = "familySharable"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case inapppurchasetype = "inAppPurchaseType"
        case name = "name"
        case pricepoints = "pricePoints"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case reviewnote = "reviewNote"
        case state = "state"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesInAppPurchaseLocalizationsGetToManyRelated: String { 
        case inapppurchasev2 = "inAppPurchaseV2"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseLocalizations: (query) the fields to include for returned resources of type inAppPurchaseLocalizations (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesInAppPurchaseLocalizationsGetToManyRelated(_id: String, fieldsInAppPurchaseLocalizations: [String]? = nil, fieldsInAppPurchases: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: InAppPurchaseLocalizationsResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedWithRequestBuilder(_id: _id, fieldsInAppPurchaseLocalizations: fieldsInAppPurchaseLocalizations, fieldsInAppPurchases: fieldsInAppPurchases, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}/inAppPurchaseLocalizations
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "description" : "description",
      "state" : "PREPARE_FOR_SUBMISSION",
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseLocalizations"
  }, {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "description" : "description",
      "state" : "PREPARE_FOR_SUBMISSION",
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseLocalizations"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  }, {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseLocalizations: (query) the fields to include for returned resources of type inAppPurchaseLocalizations (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<InAppPurchaseLocalizationsResponse> 
     */
    open class func inAppPurchasesInAppPurchaseLocalizationsGetToManyRelatedWithRequestBuilder(_id: String, fieldsInAppPurchaseLocalizations: [String]? = nil, fieldsInAppPurchases: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<InAppPurchaseLocalizationsResponse> {
        var path = "/v2/inAppPurchases/{id}/inAppPurchaseLocalizations"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchaseLocalizations]": fieldsInAppPurchaseLocalizations, 
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<InAppPurchaseLocalizationsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchasePricePoints
     */
    public enum FieldsInAppPurchasePricePoints_inAppPurchasesPricePointsGetToManyRelated: String { 
        case customerprice = "customerPrice"
        case inapppurchasev2 = "inAppPurchaseV2"
        case pricetier = "priceTier"
        case proceeds = "proceeds"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_inAppPurchasesPricePointsGetToManyRelated: String { 
        case currency = "currency"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesPricePointsGetToManyRelated: String { 
        case territory = "territory"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter filterPriceTier: (query) filter by attribute &#x27;priceTier&#x27; (optional)
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsInAppPurchasePricePoints: (query) the fields to include for returned resources of type inAppPurchasePricePoints (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesPricePointsGetToManyRelated(_id: String, filterPriceTier: [String]? = nil, filterTerritory: [String]? = nil, fieldsInAppPurchasePricePoints: [String]? = nil, fieldsTerritories: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: InAppPurchasePricePointsResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesPricePointsGetToManyRelatedWithRequestBuilder(_id: _id, filterPriceTier: filterPriceTier, filterTerritory: filterTerritory, fieldsInAppPurchasePricePoints: fieldsInAppPurchasePricePoints, fieldsTerritories: fieldsTerritories, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}/pricePoints
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "attributes" : {
      "priceTier" : "priceTier",
      "proceeds" : "proceeds",
      "customerPrice" : "customerPrice"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchasePricePoints"
  }, {
    "relationships" : {
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "attributes" : {
      "priceTier" : "priceTier",
      "proceeds" : "proceeds",
      "customerPrice" : "customerPrice"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchasePricePoints"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "attributes" : {
      "currency" : "currency"
    },
    "id" : "id",
    "type" : "territories"
  }, {
    "attributes" : {
      "currency" : "currency"
    },
    "id" : "id",
    "type" : "territories"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter filterPriceTier: (query) filter by attribute &#x27;priceTier&#x27; (optional)
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsInAppPurchasePricePoints: (query) the fields to include for returned resources of type inAppPurchasePricePoints (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<InAppPurchasePricePointsResponse> 
     */
    open class func inAppPurchasesPricePointsGetToManyRelatedWithRequestBuilder(_id: String, filterPriceTier: [String]? = nil, filterTerritory: [String]? = nil, fieldsInAppPurchasePricePoints: [String]? = nil, fieldsTerritories: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<InAppPurchasePricePointsResponse> {
        var path = "/v2/inAppPurchases/{id}/pricePoints"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[priceTier]": filterPriceTier, 
                        "filter[territory]": filterTerritory, 
                        "fields[inAppPurchasePricePoints]": fieldsInAppPurchasePricePoints, 
                        "fields[territories]": fieldsTerritories, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<InAppPurchasePricePointsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsPromotedPurchases
     */
    public enum FieldsPromotedPurchases_inAppPurchasesPromotedPurchaseGetToOneRelated: String { 
        case app = "app"
        case enabled = "enabled"
        case inapppurchasev2 = "inAppPurchaseV2"
        case promotionimages = "promotionImages"
        case state = "state"
        case subscription = "subscription"
        case visibleforallusers = "visibleForAllUsers"
    }

    /**
     * enum for parameter fieldsSubscriptions
     */
    public enum FieldsSubscriptions_inAppPurchasesPromotedPurchaseGetToOneRelated: String { 
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case familysharable = "familySharable"
        case group = "group"
        case grouplevel = "groupLevel"
        case introductoryoffers = "introductoryOffers"
        case name = "name"
        case offercodes = "offerCodes"
        case pricepoints = "pricePoints"
        case prices = "prices"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case promotionaloffers = "promotionalOffers"
        case reviewnote = "reviewNote"
        case state = "state"
        case subscriptionlocalizations = "subscriptionLocalizations"
        case subscriptionperiod = "subscriptionPeriod"
    }

    /**
     * enum for parameter fieldsInAppPurchases
     */
    public enum FieldsInAppPurchases_inAppPurchasesPromotedPurchaseGetToOneRelated: String { 
        case app = "app"
        case appstorereviewscreenshot = "appStoreReviewScreenshot"
        case availableinallterritories = "availableInAllTerritories"
        case content = "content"
        case contenthosting = "contentHosting"
        case familysharable = "familySharable"
        case iappriceschedule = "iapPriceSchedule"
        case inapppurchaselocalizations = "inAppPurchaseLocalizations"
        case inapppurchasetype = "inAppPurchaseType"
        case name = "name"
        case pricepoints = "pricePoints"
        case productid = "productId"
        case promotedpurchase = "promotedPurchase"
        case reviewnote = "reviewNote"
        case state = "state"
    }

    /**
     * enum for parameter fieldsPromotedPurchaseImages
     */
    public enum FieldsPromotedPurchaseImages_inAppPurchasesPromotedPurchaseGetToOneRelated: String { 
        case assettoken = "assetToken"
        case assettype = "assetType"
        case filename = "fileName"
        case filesize = "fileSize"
        case imageasset = "imageAsset"
        case promotedpurchase = "promotedPurchase"
        case sourcefilechecksum = "sourceFileChecksum"
        case state = "state"
        case uploadoperations = "uploadOperations"
        case uploaded = "uploaded"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchasesPromotedPurchaseGetToOneRelated: String { 
        case inapppurchasev2 = "inAppPurchaseV2"
        case promotionimages = "promotionImages"
        case subscription = "subscription"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsPromotedPurchases: (query) the fields to include for returned resources of type promotedPurchases (optional)
     - parameter fieldsSubscriptions: (query) the fields to include for returned resources of type subscriptions (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter fieldsPromotedPurchaseImages: (query) the fields to include for returned resources of type promotedPurchaseImages (optional)
     - parameter limitPromotionImages: (query) maximum number of related promotionImages returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesPromotedPurchaseGetToOneRelated(_id: String, fieldsPromotedPurchases: [String]? = nil, fieldsSubscriptions: [String]? = nil, fieldsInAppPurchases: [String]? = nil, fieldsPromotedPurchaseImages: [String]? = nil, limitPromotionImages: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: PromotedPurchaseResponse?,_ error: Error?) -> Void)) {
        inAppPurchasesPromotedPurchaseGetToOneRelatedWithRequestBuilder(_id: _id, fieldsPromotedPurchases: fieldsPromotedPurchases, fieldsSubscriptions: fieldsSubscriptions, fieldsInAppPurchases: fieldsInAppPurchases, fieldsPromotedPurchaseImages: fieldsPromotedPurchaseImages, limitPromotionImages: limitPromotionImages, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v2/inAppPurchases/{id}/promotedPurchase
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "promotionImages" : {
        "data" : [ {
          "id" : "id",
          "type" : "promotedPurchaseImages"
        }, {
          "id" : "id",
          "type" : "promotedPurchaseImages"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "visibleForAllUsers" : true,
      "state" : "APPROVED",
      "enabled" : true
    },
    "id" : "id",
    "type" : "promotedPurchases"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsPromotedPurchases: (query) the fields to include for returned resources of type promotedPurchases (optional)
     - parameter fieldsSubscriptions: (query) the fields to include for returned resources of type subscriptions (optional)
     - parameter fieldsInAppPurchases: (query) the fields to include for returned resources of type inAppPurchases (optional)
     - parameter fieldsPromotedPurchaseImages: (query) the fields to include for returned resources of type promotedPurchaseImages (optional)
     - parameter limitPromotionImages: (query) maximum number of related promotionImages returned (when they are included) (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<PromotedPurchaseResponse> 
     */
    open class func inAppPurchasesPromotedPurchaseGetToOneRelatedWithRequestBuilder(_id: String, fieldsPromotedPurchases: [String]? = nil, fieldsSubscriptions: [String]? = nil, fieldsInAppPurchases: [String]? = nil, fieldsPromotedPurchaseImages: [String]? = nil, limitPromotionImages: Int? = nil, include: [String]? = nil) -> RequestBuilder<PromotedPurchaseResponse> {
        var path = "/v2/inAppPurchases/{id}/promotedPurchase"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[promotedPurchases]": fieldsPromotedPurchases, 
                        "fields[subscriptions]": fieldsSubscriptions, 
                        "fields[inAppPurchases]": fieldsInAppPurchases, 
                        "fields[promotedPurchaseImages]": fieldsPromotedPurchaseImages, 
                        "limit[promotionImages]": limitPromotionImages?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<PromotedPurchaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) InAppPurchase representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchasesUpdateInstance(body: InAppPurchaseV2UpdateRequest, _id: String, completion: @escaping ((_ data: InAppPurchaseV2Response?,_ error: Error?) -> Void)) {
        inAppPurchasesUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v2/inAppPurchases/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) InAppPurchase representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<InAppPurchaseV2Response> 
     */
    open class func inAppPurchasesUpdateInstanceWithRequestBuilder(body: InAppPurchaseV2UpdateRequest, _id: String) -> RequestBuilder<InAppPurchaseV2Response> {
        var path = "/v2/inAppPurchases/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InAppPurchaseV2Response>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
