//
// InAppPurchaseLocalizationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class InAppPurchaseLocalizationsAPI {
    /**

     - parameter body: (body) InAppPurchaseLocalization representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchaseLocalizationsCreateInstance(body: InAppPurchaseLocalizationCreateRequest, completion: @escaping ((_ data: InAppPurchaseLocalizationResponse?,_ error: Error?) -> Void)) {
        inAppPurchaseLocalizationsCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/inAppPurchaseLocalizations
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "description" : "description",
      "state" : "PREPARE_FOR_SUBMISSION",
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseLocalizations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  }, {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  } ]
}}]
     - parameter body: (body) InAppPurchaseLocalization representation 

     - returns: RequestBuilder<InAppPurchaseLocalizationResponse> 
     */
    open class func inAppPurchaseLocalizationsCreateInstanceWithRequestBuilder(body: InAppPurchaseLocalizationCreateRequest) -> RequestBuilder<InAppPurchaseLocalizationResponse> {
        let path = "/v1/inAppPurchaseLocalizations"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InAppPurchaseLocalizationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchaseLocalizationsDeleteInstance(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        inAppPurchaseLocalizationsDeleteInstanceWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v1/inAppPurchaseLocalizations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<Void> 
     */
    open class func inAppPurchaseLocalizationsDeleteInstanceWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/v1/inAppPurchaseLocalizations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsInAppPurchaseLocalizations
     */
    public enum FieldsInAppPurchaseLocalizations_inAppPurchaseLocalizationsGetInstance: String { 
        case _description = "description"
        case inapppurchasev2 = "inAppPurchaseV2"
        case locale = "locale"
        case name = "name"
        case state = "state"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchaseLocalizationsGetInstance: String { 
        case inapppurchasev2 = "inAppPurchaseV2"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseLocalizations: (query) the fields to include for returned resources of type inAppPurchaseLocalizations (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchaseLocalizationsGetInstance(_id: String, fieldsInAppPurchaseLocalizations: [String]? = nil, include: [String]? = nil, completion: @escaping ((_ data: InAppPurchaseLocalizationResponse?,_ error: Error?) -> Void)) {
        inAppPurchaseLocalizationsGetInstanceWithRequestBuilder(_id: _id, fieldsInAppPurchaseLocalizations: fieldsInAppPurchaseLocalizations, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/inAppPurchaseLocalizations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "description" : "description",
      "state" : "PREPARE_FOR_SUBMISSION",
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseLocalizations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  }, {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseLocalizations: (query) the fields to include for returned resources of type inAppPurchaseLocalizations (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<InAppPurchaseLocalizationResponse> 
     */
    open class func inAppPurchaseLocalizationsGetInstanceWithRequestBuilder(_id: String, fieldsInAppPurchaseLocalizations: [String]? = nil, include: [String]? = nil) -> RequestBuilder<InAppPurchaseLocalizationResponse> {
        var path = "/v1/inAppPurchaseLocalizations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[inAppPurchaseLocalizations]": fieldsInAppPurchaseLocalizations, 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<InAppPurchaseLocalizationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) InAppPurchaseLocalization representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func inAppPurchaseLocalizationsUpdateInstance(body: InAppPurchaseLocalizationUpdateRequest, _id: String, completion: @escaping ((_ data: InAppPurchaseLocalizationResponse?,_ error: Error?) -> Void)) {
        inAppPurchaseLocalizationsUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/inAppPurchaseLocalizations/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "inAppPurchaseV2" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchases"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "name" : "name",
      "description" : "description",
      "state" : "PREPARE_FOR_SUBMISSION",
      "locale" : "locale"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "inAppPurchaseLocalizations"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  }, {
    "relationships" : {
      "pricePoints" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        }, {
          "id" : "id",
          "type" : "inAppPurchasePricePoints"
        } ]
      },
      "appStoreReviewScreenshot" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseAppStoreReviewScreenshots"
        }
      },
      "iapPriceSchedule" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchasePriceSchedules"
        }
      },
      "content" : {
        "data" : {
          "id" : "id",
          "type" : "inAppPurchaseContents"
        }
      },
      "inAppPurchaseLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        }, {
          "id" : "id",
          "type" : "inAppPurchaseLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "promotedPurchase" : {
        "data" : {
          "id" : "id",
          "type" : "promotedPurchases"
        }
      }
    },
    "attributes" : {
      "reviewNote" : "reviewNote",
      "productId" : "productId",
      "name" : "name",
      "familySharable" : true,
      "contentHosting" : true,
      "state" : "MISSING_METADATA",
      "inAppPurchaseType" : "CONSUMABLE",
      "availableInAllTerritories" : true
    },
    "id" : "id",
    "type" : "inAppPurchases"
  } ]
}}]
     - parameter body: (body) InAppPurchaseLocalization representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<InAppPurchaseLocalizationResponse> 
     */
    open class func inAppPurchaseLocalizationsUpdateInstanceWithRequestBuilder(body: InAppPurchaseLocalizationUpdateRequest, _id: String) -> RequestBuilder<InAppPurchaseLocalizationResponse> {
        var path = "/v1/inAppPurchaseLocalizations/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InAppPurchaseLocalizationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
