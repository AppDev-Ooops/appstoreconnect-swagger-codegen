//
// TerritoriesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class TerritoriesAPI {
    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_territoriesGetCollection: String { 
        case currency = "currency"
    }

    /**

     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func territoriesGetCollection(fieldsTerritories: [String]? = nil, limit: Int? = nil, completion: @escaping ((_ data: TerritoriesResponse?,_ error: Error?) -> Void)) {
        territoriesGetCollectionWithRequestBuilder(fieldsTerritories: fieldsTerritories, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/territories
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "attributes" : {
      "currency" : "currency"
    },
    "id" : "id",
    "type" : "territories"
  }, {
    "attributes" : {
      "currency" : "currency"
    },
    "id" : "id",
    "type" : "territories"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  }
}}]
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limit: (query) maximum resources per page (optional)

     - returns: RequestBuilder<TerritoriesResponse> 
     */
    open class func territoriesGetCollectionWithRequestBuilder(fieldsTerritories: [String]? = nil, limit: Int? = nil) -> RequestBuilder<TerritoriesResponse> {
        let path = "/v1/territories"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[territories]": fieldsTerritories, 
                        "limit": limit?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<TerritoriesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
