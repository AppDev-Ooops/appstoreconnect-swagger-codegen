//
// SubscriptionOfferCodesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SubscriptionOfferCodesAPI {
    /**

     - parameter body: (body) SubscriptionOfferCode representation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionOfferCodesCreateInstance(body: SubscriptionOfferCodeCreateRequest, completion: @escaping ((_ data: SubscriptionOfferCodeResponse?,_ error: Error?) -> Void)) {
        subscriptionOfferCodesCreateInstanceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /v1/subscriptionOfferCodes
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) SubscriptionOfferCode representation 

     - returns: RequestBuilder<SubscriptionOfferCodeResponse> 
     */
    open class func subscriptionOfferCodesCreateInstanceWithRequestBuilder(body: SubscriptionOfferCodeCreateRequest) -> RequestBuilder<SubscriptionOfferCodeResponse> {
        let path = "/v1/subscriptionOfferCodes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubscriptionOfferCodeResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     * enum for parameter fieldsSubscriptionOfferCodeCustomCodes
     */
    public enum FieldsSubscriptionOfferCodeCustomCodes_subscriptionOfferCodesCustomCodesGetToManyRelated: String { 
        case active = "active"
        case createddate = "createdDate"
        case customcode = "customCode"
        case expirationdate = "expirationDate"
        case numberofcodes = "numberOfCodes"
        case offercode = "offerCode"
    }

    /**
     * enum for parameter fieldsSubscriptionOfferCodes
     */
    public enum FieldsSubscriptionOfferCodes_subscriptionOfferCodesCustomCodesGetToManyRelated: String { 
        case active = "active"
        case customcodes = "customCodes"
        case customereligibilities = "customerEligibilities"
        case duration = "duration"
        case name = "name"
        case numberofperiods = "numberOfPeriods"
        case offereligibility = "offerEligibility"
        case offermode = "offerMode"
        case onetimeusecodes = "oneTimeUseCodes"
        case prices = "prices"
        case subscription = "subscription"
        case totalnumberofcodes = "totalNumberOfCodes"
    }

    /**
     * enum for parameter include
     */
    public enum Include_subscriptionOfferCodesCustomCodesGetToManyRelated: String { 
        case offercode = "offerCode"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionOfferCodeCustomCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeCustomCodes (optional)
     - parameter fieldsSubscriptionOfferCodes: (query) the fields to include for returned resources of type subscriptionOfferCodes (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionOfferCodesCustomCodesGetToManyRelated(_id: String, fieldsSubscriptionOfferCodeCustomCodes: [String]? = nil, fieldsSubscriptionOfferCodes: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: SubscriptionOfferCodeCustomCodesResponse?,_ error: Error?) -> Void)) {
        subscriptionOfferCodesCustomCodesGetToManyRelatedWithRequestBuilder(_id: _id, fieldsSubscriptionOfferCodeCustomCodes: fieldsSubscriptionOfferCodeCustomCodes, fieldsSubscriptionOfferCodes: fieldsSubscriptionOfferCodes, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/subscriptionOfferCodes/{id}/customCodes
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "offerCode" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "numberOfCodes" : 0,
      "active" : true,
      "customCode" : "customCode",
      "expirationDate" : "2000-01-23"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionOfferCodeCustomCodes"
  }, {
    "relationships" : {
      "offerCode" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "numberOfCodes" : 0,
      "active" : true,
      "customCode" : "customCode",
      "expirationDate" : "2000-01-23"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionOfferCodeCustomCodes"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  }, {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionOfferCodeCustomCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeCustomCodes (optional)
     - parameter fieldsSubscriptionOfferCodes: (query) the fields to include for returned resources of type subscriptionOfferCodes (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<SubscriptionOfferCodeCustomCodesResponse> 
     */
    open class func subscriptionOfferCodesCustomCodesGetToManyRelatedWithRequestBuilder(_id: String, fieldsSubscriptionOfferCodeCustomCodes: [String]? = nil, fieldsSubscriptionOfferCodes: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<SubscriptionOfferCodeCustomCodesResponse> {
        var path = "/v1/subscriptionOfferCodes/{id}/customCodes"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[subscriptionOfferCodeCustomCodes]": fieldsSubscriptionOfferCodeCustomCodes, 
                        "fields[subscriptionOfferCodes]": fieldsSubscriptionOfferCodes, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<SubscriptionOfferCodeCustomCodesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsSubscriptionOfferCodes
     */
    public enum FieldsSubscriptionOfferCodes_subscriptionOfferCodesGetInstance: String { 
        case active = "active"
        case customcodes = "customCodes"
        case customereligibilities = "customerEligibilities"
        case duration = "duration"
        case name = "name"
        case numberofperiods = "numberOfPeriods"
        case offereligibility = "offerEligibility"
        case offermode = "offerMode"
        case onetimeusecodes = "oneTimeUseCodes"
        case prices = "prices"
        case subscription = "subscription"
        case totalnumberofcodes = "totalNumberOfCodes"
    }

    /**
     * enum for parameter include
     */
    public enum Include_subscriptionOfferCodesGetInstance: String { 
        case customcodes = "customCodes"
        case onetimeusecodes = "oneTimeUseCodes"
        case prices = "prices"
        case subscription = "subscription"
    }

    /**
     * enum for parameter fieldsSubscriptionOfferCodeCustomCodes
     */
    public enum FieldsSubscriptionOfferCodeCustomCodes_subscriptionOfferCodesGetInstance: String { 
        case active = "active"
        case createddate = "createdDate"
        case customcode = "customCode"
        case expirationdate = "expirationDate"
        case numberofcodes = "numberOfCodes"
        case offercode = "offerCode"
    }

    /**
     * enum for parameter fieldsSubscriptionOfferCodeOneTimeUseCodes
     */
    public enum FieldsSubscriptionOfferCodeOneTimeUseCodes_subscriptionOfferCodesGetInstance: String { 
        case active = "active"
        case createddate = "createdDate"
        case expirationdate = "expirationDate"
        case numberofcodes = "numberOfCodes"
        case offercode = "offerCode"
        case values = "values"
    }

    /**
     * enum for parameter fieldsSubscriptionOfferCodePrices
     */
    public enum FieldsSubscriptionOfferCodePrices_subscriptionOfferCodesGetInstance: String { 
        case subscriptionpricepoint = "subscriptionPricePoint"
        case territory = "territory"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionOfferCodes: (query) the fields to include for returned resources of type subscriptionOfferCodes (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsSubscriptionOfferCodeCustomCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeCustomCodes (optional)
     - parameter fieldsSubscriptionOfferCodeOneTimeUseCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes (optional)
     - parameter fieldsSubscriptionOfferCodePrices: (query) the fields to include for returned resources of type subscriptionOfferCodePrices (optional)
     - parameter limitCustomCodes: (query) maximum number of related customCodes returned (when they are included) (optional)
     - parameter limitOneTimeUseCodes: (query) maximum number of related oneTimeUseCodes returned (when they are included) (optional)
     - parameter limitPrices: (query) maximum number of related prices returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionOfferCodesGetInstance(_id: String, fieldsSubscriptionOfferCodes: [String]? = nil, include: [String]? = nil, fieldsSubscriptionOfferCodeCustomCodes: [String]? = nil, fieldsSubscriptionOfferCodeOneTimeUseCodes: [String]? = nil, fieldsSubscriptionOfferCodePrices: [String]? = nil, limitCustomCodes: Int? = nil, limitOneTimeUseCodes: Int? = nil, limitPrices: Int? = nil, completion: @escaping ((_ data: SubscriptionOfferCodeResponse?,_ error: Error?) -> Void)) {
        subscriptionOfferCodesGetInstanceWithRequestBuilder(_id: _id, fieldsSubscriptionOfferCodes: fieldsSubscriptionOfferCodes, include: include, fieldsSubscriptionOfferCodeCustomCodes: fieldsSubscriptionOfferCodeCustomCodes, fieldsSubscriptionOfferCodeOneTimeUseCodes: fieldsSubscriptionOfferCodeOneTimeUseCodes, fieldsSubscriptionOfferCodePrices: fieldsSubscriptionOfferCodePrices, limitCustomCodes: limitCustomCodes, limitOneTimeUseCodes: limitOneTimeUseCodes, limitPrices: limitPrices).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/subscriptionOfferCodes/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionOfferCodes: (query) the fields to include for returned resources of type subscriptionOfferCodes (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsSubscriptionOfferCodeCustomCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeCustomCodes (optional)
     - parameter fieldsSubscriptionOfferCodeOneTimeUseCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes (optional)
     - parameter fieldsSubscriptionOfferCodePrices: (query) the fields to include for returned resources of type subscriptionOfferCodePrices (optional)
     - parameter limitCustomCodes: (query) maximum number of related customCodes returned (when they are included) (optional)
     - parameter limitOneTimeUseCodes: (query) maximum number of related oneTimeUseCodes returned (when they are included) (optional)
     - parameter limitPrices: (query) maximum number of related prices returned (when they are included) (optional)

     - returns: RequestBuilder<SubscriptionOfferCodeResponse> 
     */
    open class func subscriptionOfferCodesGetInstanceWithRequestBuilder(_id: String, fieldsSubscriptionOfferCodes: [String]? = nil, include: [String]? = nil, fieldsSubscriptionOfferCodeCustomCodes: [String]? = nil, fieldsSubscriptionOfferCodeOneTimeUseCodes: [String]? = nil, fieldsSubscriptionOfferCodePrices: [String]? = nil, limitCustomCodes: Int? = nil, limitOneTimeUseCodes: Int? = nil, limitPrices: Int? = nil) -> RequestBuilder<SubscriptionOfferCodeResponse> {
        var path = "/v1/subscriptionOfferCodes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[subscriptionOfferCodes]": fieldsSubscriptionOfferCodes, 
                        "include": include, 
                        "fields[subscriptionOfferCodeCustomCodes]": fieldsSubscriptionOfferCodeCustomCodes, 
                        "fields[subscriptionOfferCodeOneTimeUseCodes]": fieldsSubscriptionOfferCodeOneTimeUseCodes, 
                        "fields[subscriptionOfferCodePrices]": fieldsSubscriptionOfferCodePrices, 
                        "limit[customCodes]": limitCustomCodes?.encodeToJSON(), 
                        "limit[oneTimeUseCodes]": limitOneTimeUseCodes?.encodeToJSON(), 
                        "limit[prices]": limitPrices?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<SubscriptionOfferCodeResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsSubscriptionOfferCodes
     */
    public enum FieldsSubscriptionOfferCodes_subscriptionOfferCodesOneTimeUseCodesGetToManyRelated: String { 
        case active = "active"
        case customcodes = "customCodes"
        case customereligibilities = "customerEligibilities"
        case duration = "duration"
        case name = "name"
        case numberofperiods = "numberOfPeriods"
        case offereligibility = "offerEligibility"
        case offermode = "offerMode"
        case onetimeusecodes = "oneTimeUseCodes"
        case prices = "prices"
        case subscription = "subscription"
        case totalnumberofcodes = "totalNumberOfCodes"
    }

    /**
     * enum for parameter fieldsSubscriptionOfferCodeOneTimeUseCodes
     */
    public enum FieldsSubscriptionOfferCodeOneTimeUseCodes_subscriptionOfferCodesOneTimeUseCodesGetToManyRelated: String { 
        case active = "active"
        case createddate = "createdDate"
        case expirationdate = "expirationDate"
        case numberofcodes = "numberOfCodes"
        case offercode = "offerCode"
        case values = "values"
    }

    /**
     * enum for parameter include
     */
    public enum Include_subscriptionOfferCodesOneTimeUseCodesGetToManyRelated: String { 
        case offercode = "offerCode"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionOfferCodes: (query) the fields to include for returned resources of type subscriptionOfferCodes (optional)
     - parameter fieldsSubscriptionOfferCodeOneTimeUseCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionOfferCodesOneTimeUseCodesGetToManyRelated(_id: String, fieldsSubscriptionOfferCodes: [String]? = nil, fieldsSubscriptionOfferCodeOneTimeUseCodes: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: SubscriptionOfferCodeOneTimeUseCodesResponse?,_ error: Error?) -> Void)) {
        subscriptionOfferCodesOneTimeUseCodesGetToManyRelatedWithRequestBuilder(_id: _id, fieldsSubscriptionOfferCodes: fieldsSubscriptionOfferCodes, fieldsSubscriptionOfferCodeOneTimeUseCodes: fieldsSubscriptionOfferCodeOneTimeUseCodes, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/subscriptionOfferCodes/{id}/oneTimeUseCodes
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "offerCode" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "numberOfCodes" : 0,
      "active" : true,
      "expirationDate" : "2000-01-23"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionOfferCodeOneTimeUseCodes"
  }, {
    "relationships" : {
      "offerCode" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionOfferCodes"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "createdDate" : "2000-01-23T04:56:07.000+00:00",
      "numberOfCodes" : 0,
      "active" : true,
      "expirationDate" : "2000-01-23"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionOfferCodeOneTimeUseCodes"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  }, {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionOfferCodes: (query) the fields to include for returned resources of type subscriptionOfferCodes (optional)
     - parameter fieldsSubscriptionOfferCodeOneTimeUseCodes: (query) the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<SubscriptionOfferCodeOneTimeUseCodesResponse> 
     */
    open class func subscriptionOfferCodesOneTimeUseCodesGetToManyRelatedWithRequestBuilder(_id: String, fieldsSubscriptionOfferCodes: [String]? = nil, fieldsSubscriptionOfferCodeOneTimeUseCodes: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<SubscriptionOfferCodeOneTimeUseCodesResponse> {
        var path = "/v1/subscriptionOfferCodes/{id}/oneTimeUseCodes"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[subscriptionOfferCodes]": fieldsSubscriptionOfferCodes, 
                        "fields[subscriptionOfferCodeOneTimeUseCodes]": fieldsSubscriptionOfferCodeOneTimeUseCodes, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<SubscriptionOfferCodeOneTimeUseCodesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsSubscriptionPricePoints
     */
    public enum FieldsSubscriptionPricePoints_subscriptionOfferCodesPricesGetToManyRelated: String { 
        case customerprice = "customerPrice"
        case equalizations = "equalizations"
        case proceeds = "proceeds"
        case proceedsyear2 = "proceedsYear2"
        case subscription = "subscription"
        case territory = "territory"
    }

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_subscriptionOfferCodesPricesGetToManyRelated: String { 
        case currency = "currency"
    }

    /**
     * enum for parameter fieldsSubscriptionOfferCodePrices
     */
    public enum FieldsSubscriptionOfferCodePrices_subscriptionOfferCodesPricesGetToManyRelated: String { 
        case subscriptionpricepoint = "subscriptionPricePoint"
        case territory = "territory"
    }

    /**
     * enum for parameter include
     */
    public enum Include_subscriptionOfferCodesPricesGetToManyRelated: String { 
        case subscriptionpricepoint = "subscriptionPricePoint"
        case territory = "territory"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsSubscriptionPricePoints: (query) the fields to include for returned resources of type subscriptionPricePoints (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter fieldsSubscriptionOfferCodePrices: (query) the fields to include for returned resources of type subscriptionOfferCodePrices (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionOfferCodesPricesGetToManyRelated(_id: String, filterTerritory: [String]? = nil, fieldsSubscriptionPricePoints: [String]? = nil, fieldsTerritories: [String]? = nil, fieldsSubscriptionOfferCodePrices: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: SubscriptionOfferCodePricesResponse?,_ error: Error?) -> Void)) {
        subscriptionOfferCodesPricesGetToManyRelatedWithRequestBuilder(_id: _id, filterTerritory: filterTerritory, fieldsSubscriptionPricePoints: fieldsSubscriptionPricePoints, fieldsTerritories: fieldsTerritories, fieldsSubscriptionOfferCodePrices: fieldsSubscriptionOfferCodePrices, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/subscriptionOfferCodes/{id}/prices
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "subscriptionPricePoint" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionPricePoints"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionOfferCodePrices"
  }, {
    "relationships" : {
      "subscriptionPricePoint" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptionPricePoints"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "territory" : {
        "data" : {
          "id" : "id",
          "type" : "territories"
        }
      }
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "subscriptionOfferCodePrices"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter filterTerritory: (query) filter by id(s) of related &#x27;territory&#x27; (optional)
     - parameter fieldsSubscriptionPricePoints: (query) the fields to include for returned resources of type subscriptionPricePoints (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter fieldsSubscriptionOfferCodePrices: (query) the fields to include for returned resources of type subscriptionOfferCodePrices (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<SubscriptionOfferCodePricesResponse> 
     */
    open class func subscriptionOfferCodesPricesGetToManyRelatedWithRequestBuilder(_id: String, filterTerritory: [String]? = nil, fieldsSubscriptionPricePoints: [String]? = nil, fieldsTerritories: [String]? = nil, fieldsSubscriptionOfferCodePrices: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<SubscriptionOfferCodePricesResponse> {
        var path = "/v1/subscriptionOfferCodes/{id}/prices"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[territory]": filterTerritory, 
                        "fields[subscriptionPricePoints]": fieldsSubscriptionPricePoints, 
                        "fields[territories]": fieldsTerritories, 
                        "fields[subscriptionOfferCodePrices]": fieldsSubscriptionOfferCodePrices, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<SubscriptionOfferCodePricesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) SubscriptionOfferCode representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func subscriptionOfferCodesUpdateInstance(body: SubscriptionOfferCodeUpdateRequest, _id: String, completion: @escaping ((_ data: SubscriptionOfferCodeResponse?,_ error: Error?) -> Void)) {
        subscriptionOfferCodesUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/subscriptionOfferCodes/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "customCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeCustomCodes"
        } ]
      },
      "oneTimeUseCodes" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodeOneTimeUseCodes"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      },
      "subscription" : {
        "data" : {
          "id" : "id",
          "type" : "subscriptions"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "prices" : {
        "data" : [ {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        }, {
          "id" : "id",
          "type" : "subscriptionOfferCodePrices"
        } ]
      }
    },
    "attributes" : {
      "duration" : "ONE_DAY",
      "offerEligibility" : "STACK_WITH_INTRO_OFFERS",
      "name" : "name",
      "active" : true,
      "numberOfPeriods" : 6,
      "offerMode" : "PAY_AS_YOU_GO",
      "customerEligibilities" : [ "NEW", "NEW" ],
      "totalNumberOfCodes" : 1
    },
    "id" : "id",
    "type" : "subscriptionOfferCodes"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) SubscriptionOfferCode representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<SubscriptionOfferCodeResponse> 
     */
    open class func subscriptionOfferCodesUpdateInstanceWithRequestBuilder(body: SubscriptionOfferCodeUpdateRequest, _id: String) -> RequestBuilder<SubscriptionOfferCodeResponse> {
        var path = "/v1/subscriptionOfferCodes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubscriptionOfferCodeResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
