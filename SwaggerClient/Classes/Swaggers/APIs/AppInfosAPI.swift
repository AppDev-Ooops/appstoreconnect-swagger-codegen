//
// AppInfosAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AppInfosAPI {
    /**
     * enum for parameter fieldsAgeRatingDeclarations
     */
    public enum FieldsAgeRatingDeclarations_appInfosAgeRatingDeclarationGetToOneRelated: String { 
        case alcoholtobaccoordruguseorreferences = "alcoholTobaccoOrDrugUseOrReferences"
        case contests = "contests"
        case gambling = "gambling"
        case gamblingandcontests = "gamblingAndContests"
        case gamblingsimulated = "gamblingSimulated"
        case horrororfearthemes = "horrorOrFearThemes"
        case kidsageband = "kidsAgeBand"
        case matureorsuggestivethemes = "matureOrSuggestiveThemes"
        case medicalortreatmentinformation = "medicalOrTreatmentInformation"
        case profanityorcrudehumor = "profanityOrCrudeHumor"
        case seventeenplus = "seventeenPlus"
        case sexualcontentgraphicandnudity = "sexualContentGraphicAndNudity"
        case sexualcontentornudity = "sexualContentOrNudity"
        case unrestrictedwebaccess = "unrestrictedWebAccess"
        case violencecartoonorfantasy = "violenceCartoonOrFantasy"
        case violencerealistic = "violenceRealistic"
        case violencerealisticprolongedgraphicorsadistic = "violenceRealisticProlongedGraphicOrSadistic"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAgeRatingDeclarations: (query) the fields to include for returned resources of type ageRatingDeclarations (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosAgeRatingDeclarationGetToOneRelated(_id: String, fieldsAgeRatingDeclarations: [String]? = nil, completion: @escaping ((_ data: AgeRatingDeclarationResponse?,_ error: Error?) -> Void)) {
        appInfosAgeRatingDeclarationGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAgeRatingDeclarations: fieldsAgeRatingDeclarations).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/ageRatingDeclaration
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "attributes" : {
      "alcoholTobaccoOrDrugUseOrReferences" : "NONE",
      "gamblingAndContests" : true,
      "gamblingSimulated" : "NONE",
      "sexualContentGraphicAndNudity" : "NONE",
      "violenceRealistic" : "NONE",
      "gambling" : true,
      "profanityOrCrudeHumor" : "NONE",
      "seventeenPlus" : true,
      "horrorOrFearThemes" : "NONE",
      "violenceRealisticProlongedGraphicOrSadistic" : "NONE",
      "contests" : "NONE",
      "matureOrSuggestiveThemes" : "NONE",
      "unrestrictedWebAccess" : true,
      "violenceCartoonOrFantasy" : "NONE",
      "kidsAgeBand" : "FIVE_AND_UNDER",
      "medicalOrTreatmentInformation" : "NONE",
      "sexualContentOrNudity" : "NONE"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "ageRatingDeclarations"
  },
  "links" : {
    "self" : "self"
  }
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAgeRatingDeclarations: (query) the fields to include for returned resources of type ageRatingDeclarations (optional)

     - returns: RequestBuilder<AgeRatingDeclarationResponse> 
     */
    open class func appInfosAgeRatingDeclarationGetToOneRelatedWithRequestBuilder(_id: String, fieldsAgeRatingDeclarations: [String]? = nil) -> RequestBuilder<AgeRatingDeclarationResponse> {
        var path = "/v1/appInfos/{id}/ageRatingDeclaration"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[ageRatingDeclarations]": fieldsAgeRatingDeclarations
        ])


        let requestBuilder: RequestBuilder<AgeRatingDeclarationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppInfos
     */
    public enum FieldsAppInfos_appInfosAppInfoLocalizationsGetToManyRelated: String { 
        case ageratingdeclaration = "ageRatingDeclaration"
        case app = "app"
        case appinfolocalizations = "appInfoLocalizations"
        case appstoreagerating = "appStoreAgeRating"
        case appstorestate = "appStoreState"
        case brazilagerating = "brazilAgeRating"
        case kidsageband = "kidsAgeBand"
        case primarycategory = "primaryCategory"
        case primarysubcategoryone = "primarySubcategoryOne"
        case primarysubcategorytwo = "primarySubcategoryTwo"
        case secondarycategory = "secondaryCategory"
        case secondarysubcategoryone = "secondarySubcategoryOne"
        case secondarysubcategorytwo = "secondarySubcategoryTwo"
    }

    /**
     * enum for parameter fieldsAppInfoLocalizations
     */
    public enum FieldsAppInfoLocalizations_appInfosAppInfoLocalizationsGetToManyRelated: String { 
        case appinfo = "appInfo"
        case locale = "locale"
        case name = "name"
        case privacychoicesurl = "privacyChoicesUrl"
        case privacypolicytext = "privacyPolicyText"
        case privacypolicyurl = "privacyPolicyUrl"
        case subtitle = "subtitle"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appInfosAppInfoLocalizationsGetToManyRelated: String { 
        case appinfo = "appInfo"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter filterLocale: (query) filter by attribute &#x27;locale&#x27; (optional)
     - parameter fieldsAppInfos: (query) the fields to include for returned resources of type appInfos (optional)
     - parameter fieldsAppInfoLocalizations: (query) the fields to include for returned resources of type appInfoLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosAppInfoLocalizationsGetToManyRelated(_id: String, filterLocale: [String]? = nil, fieldsAppInfos: [String]? = nil, fieldsAppInfoLocalizations: [String]? = nil, limit: Int? = nil, include: [String]? = nil, completion: @escaping ((_ data: AppInfoLocalizationsResponse?,_ error: Error?) -> Void)) {
        appInfosAppInfoLocalizationsGetToManyRelatedWithRequestBuilder(_id: _id, filterLocale: filterLocale, fieldsAppInfos: fieldsAppInfos, fieldsAppInfoLocalizations: fieldsAppInfoLocalizations, limit: limit, include: include).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/appInfoLocalizations
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "appInfo" : {
        "data" : {
          "id" : "id",
          "type" : "appInfos"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "subtitle" : "subtitle",
      "name" : "name",
      "privacyPolicyText" : "privacyPolicyText",
      "locale" : "locale",
      "privacyPolicyUrl" : "privacyPolicyUrl",
      "privacyChoicesUrl" : "privacyChoicesUrl"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appInfoLocalizations"
  }, {
    "relationships" : {
      "appInfo" : {
        "data" : {
          "id" : "id",
          "type" : "appInfos"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "subtitle" : "subtitle",
      "name" : "name",
      "privacyPolicyText" : "privacyPolicyText",
      "locale" : "locale",
      "privacyPolicyUrl" : "privacyPolicyUrl",
      "privacyChoicesUrl" : "privacyChoicesUrl"
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appInfoLocalizations"
  } ],
  "meta" : {
    "paging" : {
      "total" : 0,
      "limit" : 6
    }
  },
  "links" : {
    "next" : "next",
    "self" : "self",
    "first" : "first"
  },
  "included" : [ {
    "relationships" : {
      "app" : {
        "data" : {
          "id" : "id",
          "type" : "apps"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "primaryCategory" : { },
      "ageRatingDeclaration" : {
        "data" : {
          "id" : "id",
          "type" : "ageRatingDeclarations"
        }
      },
      "appInfoLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfoLocalizations"
        }, {
          "id" : "id",
          "type" : "appInfoLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "brazilAgeRating" : "L",
      "kidsAgeBand" : "FIVE_AND_UNDER",
      "appStoreState" : "ACCEPTED",
      "appStoreAgeRating" : "FOUR_PLUS"
    },
    "id" : "id",
    "type" : "appInfos"
  }, {
    "relationships" : {
      "app" : {
        "data" : {
          "id" : "id",
          "type" : "apps"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "primaryCategory" : { },
      "ageRatingDeclaration" : {
        "data" : {
          "id" : "id",
          "type" : "ageRatingDeclarations"
        }
      },
      "appInfoLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfoLocalizations"
        }, {
          "id" : "id",
          "type" : "appInfoLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "brazilAgeRating" : "L",
      "kidsAgeBand" : "FIVE_AND_UNDER",
      "appStoreState" : "ACCEPTED",
      "appStoreAgeRating" : "FOUR_PLUS"
    },
    "id" : "id",
    "type" : "appInfos"
  } ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter filterLocale: (query) filter by attribute &#x27;locale&#x27; (optional)
     - parameter fieldsAppInfos: (query) the fields to include for returned resources of type appInfos (optional)
     - parameter fieldsAppInfoLocalizations: (query) the fields to include for returned resources of type appInfoLocalizations (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)

     - returns: RequestBuilder<AppInfoLocalizationsResponse> 
     */
    open class func appInfosAppInfoLocalizationsGetToManyRelatedWithRequestBuilder(_id: String, filterLocale: [String]? = nil, fieldsAppInfos: [String]? = nil, fieldsAppInfoLocalizations: [String]? = nil, limit: Int? = nil, include: [String]? = nil) -> RequestBuilder<AppInfoLocalizationsResponse> {
        var path = "/v1/appInfos/{id}/appInfoLocalizations"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "filter[locale]": filterLocale, 
                        "fields[appInfos]": fieldsAppInfos, 
                        "fields[appInfoLocalizations]": fieldsAppInfoLocalizations, 
                        "limit": limit?.encodeToJSON(), 
                        "include": include
        ])


        let requestBuilder: RequestBuilder<AppInfoLocalizationsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppInfos
     */
    public enum FieldsAppInfos_appInfosGetInstance: String { 
        case ageratingdeclaration = "ageRatingDeclaration"
        case app = "app"
        case appinfolocalizations = "appInfoLocalizations"
        case appstoreagerating = "appStoreAgeRating"
        case appstorestate = "appStoreState"
        case brazilagerating = "brazilAgeRating"
        case kidsageband = "kidsAgeBand"
        case primarycategory = "primaryCategory"
        case primarysubcategoryone = "primarySubcategoryOne"
        case primarysubcategorytwo = "primarySubcategoryTwo"
        case secondarycategory = "secondaryCategory"
        case secondarysubcategoryone = "secondarySubcategoryOne"
        case secondarysubcategorytwo = "secondarySubcategoryTwo"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appInfosGetInstance: String { 
        case ageratingdeclaration = "ageRatingDeclaration"
        case app = "app"
        case appinfolocalizations = "appInfoLocalizations"
        case primarycategory = "primaryCategory"
        case primarysubcategoryone = "primarySubcategoryOne"
        case primarysubcategorytwo = "primarySubcategoryTwo"
        case secondarycategory = "secondaryCategory"
        case secondarysubcategoryone = "secondarySubcategoryOne"
        case secondarysubcategorytwo = "secondarySubcategoryTwo"
    }

    /**
     * enum for parameter fieldsAgeRatingDeclarations
     */
    public enum FieldsAgeRatingDeclarations_appInfosGetInstance: String { 
        case alcoholtobaccoordruguseorreferences = "alcoholTobaccoOrDrugUseOrReferences"
        case contests = "contests"
        case gambling = "gambling"
        case gamblingandcontests = "gamblingAndContests"
        case gamblingsimulated = "gamblingSimulated"
        case horrororfearthemes = "horrorOrFearThemes"
        case kidsageband = "kidsAgeBand"
        case matureorsuggestivethemes = "matureOrSuggestiveThemes"
        case medicalortreatmentinformation = "medicalOrTreatmentInformation"
        case profanityorcrudehumor = "profanityOrCrudeHumor"
        case seventeenplus = "seventeenPlus"
        case sexualcontentgraphicandnudity = "sexualContentGraphicAndNudity"
        case sexualcontentornudity = "sexualContentOrNudity"
        case unrestrictedwebaccess = "unrestrictedWebAccess"
        case violencecartoonorfantasy = "violenceCartoonOrFantasy"
        case violencerealistic = "violenceRealistic"
        case violencerealisticprolongedgraphicorsadistic = "violenceRealisticProlongedGraphicOrSadistic"
    }

    /**
     * enum for parameter fieldsAppInfoLocalizations
     */
    public enum FieldsAppInfoLocalizations_appInfosGetInstance: String { 
        case appinfo = "appInfo"
        case locale = "locale"
        case name = "name"
        case privacychoicesurl = "privacyChoicesUrl"
        case privacypolicytext = "privacyPolicyText"
        case privacypolicyurl = "privacyPolicyUrl"
        case subtitle = "subtitle"
    }

    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosGetInstance: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppInfos: (query) the fields to include for returned resources of type appInfos (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAgeRatingDeclarations: (query) the fields to include for returned resources of type ageRatingDeclarations (optional)
     - parameter fieldsAppInfoLocalizations: (query) the fields to include for returned resources of type appInfoLocalizations (optional)
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limitAppInfoLocalizations: (query) maximum number of related appInfoLocalizations returned (when they are included) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosGetInstance(_id: String, fieldsAppInfos: [String]? = nil, include: [String]? = nil, fieldsAgeRatingDeclarations: [String]? = nil, fieldsAppInfoLocalizations: [String]? = nil, fieldsAppCategories: [String]? = nil, limitAppInfoLocalizations: Int? = nil, completion: @escaping ((_ data: AppInfoResponse?,_ error: Error?) -> Void)) {
        appInfosGetInstanceWithRequestBuilder(_id: _id, fieldsAppInfos: fieldsAppInfos, include: include, fieldsAgeRatingDeclarations: fieldsAgeRatingDeclarations, fieldsAppInfoLocalizations: fieldsAppInfoLocalizations, fieldsAppCategories: fieldsAppCategories, limitAppInfoLocalizations: limitAppInfoLocalizations).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "app" : {
        "data" : {
          "id" : "id",
          "type" : "apps"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "primaryCategory" : { },
      "ageRatingDeclaration" : {
        "data" : {
          "id" : "id",
          "type" : "ageRatingDeclarations"
        }
      },
      "appInfoLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfoLocalizations"
        }, {
          "id" : "id",
          "type" : "appInfoLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "brazilAgeRating" : "L",
      "kidsAgeBand" : "FIVE_AND_UNDER",
      "appStoreState" : "ACCEPTED",
      "appStoreAgeRating" : "FOUR_PLUS"
    },
    "id" : "id",
    "type" : "appInfos"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppInfos: (query) the fields to include for returned resources of type appInfos (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAgeRatingDeclarations: (query) the fields to include for returned resources of type ageRatingDeclarations (optional)
     - parameter fieldsAppInfoLocalizations: (query) the fields to include for returned resources of type appInfoLocalizations (optional)
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limitAppInfoLocalizations: (query) maximum number of related appInfoLocalizations returned (when they are included) (optional)

     - returns: RequestBuilder<AppInfoResponse> 
     */
    open class func appInfosGetInstanceWithRequestBuilder(_id: String, fieldsAppInfos: [String]? = nil, include: [String]? = nil, fieldsAgeRatingDeclarations: [String]? = nil, fieldsAppInfoLocalizations: [String]? = nil, fieldsAppCategories: [String]? = nil, limitAppInfoLocalizations: Int? = nil) -> RequestBuilder<AppInfoResponse> {
        var path = "/v1/appInfos/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appInfos]": fieldsAppInfos, 
                        "include": include, 
                        "fields[ageRatingDeclarations]": fieldsAgeRatingDeclarations, 
                        "fields[appInfoLocalizations]": fieldsAppInfoLocalizations, 
                        "fields[appCategories]": fieldsAppCategories, 
                        "limit[appInfoLocalizations]": limitAppInfoLocalizations?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<AppInfoResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosPrimaryCategoryGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosPrimaryCategoryGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appInfosPrimaryCategoryGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/primaryCategory
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appInfosPrimaryCategoryGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appInfos/{id}/primaryCategory"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosPrimarySubcategoryOneGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosPrimarySubcategoryOneGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appInfosPrimarySubcategoryOneGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/primarySubcategoryOne
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appInfosPrimarySubcategoryOneGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appInfos/{id}/primarySubcategoryOne"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosPrimarySubcategoryTwoGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosPrimarySubcategoryTwoGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appInfosPrimarySubcategoryTwoGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/primarySubcategoryTwo
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appInfosPrimarySubcategoryTwoGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appInfos/{id}/primarySubcategoryTwo"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosSecondaryCategoryGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosSecondaryCategoryGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appInfosSecondaryCategoryGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/secondaryCategory
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appInfosSecondaryCategoryGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appInfos/{id}/secondaryCategory"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosSecondarySubcategoryOneGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosSecondarySubcategoryOneGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appInfosSecondarySubcategoryOneGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/secondarySubcategoryOne
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appInfosSecondarySubcategoryOneGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appInfos/{id}/secondarySubcategoryOne"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appInfosSecondarySubcategoryTwoGetToOneRelated: String { 
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosSecondarySubcategoryTwoGetToOneRelated(_id: String, fieldsAppCategories: [String]? = nil, completion: @escaping ((_ data: AppCategoryResponse?,_ error: Error?) -> Void)) {
        appInfosSecondarySubcategoryTwoGetToOneRelatedWithRequestBuilder(_id: _id, fieldsAppCategories: fieldsAppCategories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/appInfos/{id}/secondarySubcategoryTwo
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "parent" : { },
      "subcategories" : {
        "data" : [ {
          "id" : "id",
          "type" : "appCategories"
        }, {
          "id" : "id",
          "type" : "appCategories"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      }
    },
    "attributes" : {
      "platforms" : [ "IOS", "IOS" ]
    },
    "links" : {
      "self" : "self"
    },
    "id" : "id",
    "type" : "appCategories"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter _id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)

     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appInfosSecondarySubcategoryTwoGetToOneRelatedWithRequestBuilder(_id: String, fieldsAppCategories: [String]? = nil) -> RequestBuilder<AppCategoryResponse> {
        var path = "/v1/appInfos/{id}/secondarySubcategoryTwo"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "fields[appCategories]": fieldsAppCategories
        ])


        let requestBuilder: RequestBuilder<AppCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body) AppInfo representation 
     - parameter _id: (path) the id of the requested resource 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfosUpdateInstance(body: AppInfoUpdateRequest, _id: String, completion: @escaping ((_ data: AppInfoResponse?,_ error: Error?) -> Void)) {
        appInfosUpdateInstanceWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /v1/appInfos/{id}
     - 

     - :
       - type: http
       - name: itc-bearer-token
     - examples: [{contentType=application/json, example={
  "data" : {
    "relationships" : {
      "app" : {
        "data" : {
          "id" : "id",
          "type" : "apps"
        },
        "links" : {
          "related" : "related",
          "self" : "self"
        }
      },
      "primaryCategory" : { },
      "ageRatingDeclaration" : {
        "data" : {
          "id" : "id",
          "type" : "ageRatingDeclarations"
        }
      },
      "appInfoLocalizations" : {
        "data" : [ {
          "id" : "id",
          "type" : "appInfoLocalizations"
        }, {
          "id" : "id",
          "type" : "appInfoLocalizations"
        } ],
        "meta" : {
          "paging" : {
            "total" : 0,
            "limit" : 6
          }
        }
      }
    },
    "attributes" : {
      "brazilAgeRating" : "L",
      "kidsAgeBand" : "FIVE_AND_UNDER",
      "appStoreState" : "ACCEPTED",
      "appStoreAgeRating" : "FOUR_PLUS"
    },
    "id" : "id",
    "type" : "appInfos"
  },
  "links" : {
    "self" : "self"
  },
  "included" : [ "", "" ]
}}]
     - parameter body: (body) AppInfo representation 
     - parameter _id: (path) the id of the requested resource 

     - returns: RequestBuilder<AppInfoResponse> 
     */
    open class func appInfosUpdateInstanceWithRequestBuilder(body: AppInfoUpdateRequest, _id: String) -> RequestBuilder<AppInfoResponse> {
        var path = "/v1/appInfos/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AppInfoResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
